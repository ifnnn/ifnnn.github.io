{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ying\u2019s Learning Notes \u00b6 \u7528\u4e8e\u8bb0\u5f55\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7684\u968f\u624b\u7b14\u8bb0\u3002","title":"\u9996\u9875"},{"location":"#yings-learning-notes","text":"\u7528\u4e8e\u8bb0\u5f55\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7684\u968f\u624b\u7b14\u8bb0\u3002","title":"Ying's Learning Notes"},{"location":"about/","text":"Ying Cai \u00b6 blog: http://www.caiying.me twitter: https://twitter.com/realcaiying ins: https://www.instagram.com/realcaiying/","title":"\u5173\u4e8e"},{"location":"about/#ying-cai","text":"blog: http://www.caiying.me twitter: https://twitter.com/realcaiying ins: https://www.instagram.com/realcaiying/","title":"Ying Cai"},{"location":"arch-ddd/","text":"\u9886\u57df\u9a71\u52a8\u5f00\u53d1 \u00b6 \u5f53\u4e2d\u53f0\u9047\u4e0a DDD\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8bbe\u8ba1\u5fae\u670d\u52a1\uff1f \u57fa\u4e8e DDD \u7684\u5fae\u670d\u52a1\u8bbe\u8ba1\u548c\u5f00\u53d1\u5b9e\u6218","title":"\u9886\u57df\u9a71\u52a8\u5f00\u53d1"},{"location":"arch-ddd/#_1","text":"\u5f53\u4e2d\u53f0\u9047\u4e0a DDD\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u8bbe\u8ba1\u5fae\u670d\u52a1\uff1f \u57fa\u4e8e DDD \u7684\u5fae\u670d\u52a1\u8bbe\u8ba1\u548c\u5f00\u53d1\u5b9e\u6218","title":"\u9886\u57df\u9a71\u52a8\u5f00\u53d1"},{"location":"bigdata-overview/","text":"\u00b6 Hadoop \u751f\u6001 \u6570\u636e\u5b58\u50a8\uff1aHDFS\u3001HBase \u6570\u636e\u5904\u7406\uff1aMapReduce\u3001YARN\uff08\u96c6\u7fa4\u548c\u8d44\u6e90\u7ba1\u7406\uff09 \u6570\u636e\u8bbf\u95ee\u5c42\uff1aHive\u3001Pig\u3001Mahout Spark \u66ff\u4ee3 Hadoop \u751f\u6001\u6c47\u603b\u7684 MapReduce\uff0c\u4e0d\u4f9d\u8d56 Hadoop\uff0c\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u4e8e Kubernetes \u7b49 Spark SQL\uff08\u652f\u6301\u7ed3\u6784\u5316\u6570\u636e\uff09 Spark Streaming\uff08\u5904\u7406\u5b9e\u65f6\u6570\u636e\uff09 MLlib\uff08\u673a\u5668\u5b66\u4e60\uff09 GraphX\uff08\u56fe\u8ba1\u7b97\uff09 SparkR\uff08\u7edf\u8ba1\u5206\u6790\uff09","title":"Bigdata overview"},{"location":"biz-weixin-work/","text":"\u4f01\u4e1a\u5fae\u4fe1 \u00b6 \u4f01\u4e1a\u53f7 \u00b6 \u5c31\u76ee\u524d\u7684\u7406\u89e3\u6765\u770b\uff0c\u4f01\u4e1a\u53f7\u8f6c\u79fb\u6210\u4e3a\u4f01\u4e1a\u5fae\u4fe1\u4e2d\u7684\u5e94\u7528 FAQ \u00b6 \u5fae\u4fe1 openid \u8f6c unionid \u7684\u65b9\u6848 \u516c\u4f17\u53f7\u901a\u8fc7\u518d\u6b21\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u5f97\u5230 unionid \u5c0f\u7a0b\u5e8f\u65e0\u6cd5\u83b7\u53d6","title":"\u4f01\u4e1a\u5fae\u4fe1"},{"location":"biz-weixin-work/#_1","text":"","title":"\u4f01\u4e1a\u5fae\u4fe1"},{"location":"biz-weixin-work/#_2","text":"\u5c31\u76ee\u524d\u7684\u7406\u89e3\u6765\u770b\uff0c\u4f01\u4e1a\u53f7\u8f6c\u79fb\u6210\u4e3a\u4f01\u4e1a\u5fae\u4fe1\u4e2d\u7684\u5e94\u7528","title":"\u4f01\u4e1a\u53f7"},{"location":"biz-weixin-work/#faq","text":"\u5fae\u4fe1 openid \u8f6c unionid \u7684\u65b9\u6848 \u516c\u4f17\u53f7\u901a\u8fc7\u518d\u6b21\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u5f97\u5230 unionid \u5c0f\u7a0b\u5e8f\u65e0\u6cd5\u83b7\u53d6","title":"FAQ"},{"location":"dev-dubbo-monitor/","text":"Dubbo Monitor for prometheus \u00b6 \u8c03\u7528\u94fe\u8def \u00b6 1. MonitorFilter \u7684 onResponse \u00b6 // org.apache.dubbo.monitor.support.MonitorFilter.MonitorListener:onResponse() @Override public void onResponse(Result result, Invoker<?> invoker, Invocation invocation) { if (invoker.getUrl().hasParameter(MONITOR_KEY)) { collect(invoker, invocation, result, RpcContext.getContext().getRemoteHost(), Long.valueOf(invocation.getAttachment(MONITOR_FILTER_START_TIME)), false); getConcurrent(invoker, invocation).decrementAndGet(); // count down } } // org.apache.dubbo.monitor.support.MonitorFilter /** * The collector logic, it will be handled by the default monitor * * @param invoker * @param invocation * @param result the invoke result * @param remoteHost the remote host address * @param start the timestamp the invoke begin * @param error if there is an error on the invoke */ private void collect(Invoker<?> invoker, Invocation invocation, Result result, String remoteHost, long start, boolean error) { try { URL monitorUrl = invoker.getUrl().getUrlParameter(MONITOR_KEY); Monitor monitor = monitorFactory.getMonitor(monitorUrl); if (monitor == null) { return; } URL statisticsURL = createStatisticsUrl(invoker, invocation, result, remoteHost, start, error); monitor.collect(statisticsURL); } catch (Throwable t) { logger.warn(\"Failed to monitor count service \" + invoker.getUrl() + \", cause: \" + t.getMessage(), t); } } 2. \u6839\u636e\u542f\u52a8\u65e5\u5fd7 \u00b6 2020-05-02 17:58:25.201 DEBUG 53784 --- [ main] o.a.d.c.e.AdaptiveClassCodeGenerator : [DUBBO] package org.apache.dubbo.monitor; \u53ef\u770b\u5230 MonitorFactory$Adaptive \u7684\u4ee3\u7801 import org.apache.dubbo.common.extension.ExtensionLoader; public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory { public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0) { if (arg0 == null) throw new IllegalArgumentException(\"url == null\"); org.apache.dubbo.common.URL url = arg0; String extName = ( url.getProtocol() == null ? \"dubbo\" : url.getProtocol() ); if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (\" + url.toString() + \") use keys([protocol])\"); org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName); return extension.getMonitor(arg0); } } \u53c2\u6570 org.apache.dubbo.common.URL \u4e3a: dubbo://127.0.0.1:2181/org.apache.dubbo.registry.RegistryService?application=demo3-dubbo-provider&dubbo=2.0.2&logger=slf4j&pid=53784&protocol=registry&qos.enable=false&refer=application%3Ddemo3-dubbo-provider%26dubbo%3D2.0.2%26interface%3Dorg.apache.dubbo.monitor.MonitorService%26logger%3Dslf4j%26pid%3D53784%26qos.enable%3Dfalse%26register.ip%3D192.168.100.230%26release%3D2.7.4.1%26timestamp%3D1588413616161&registry=zookeeper&release=2.7.4.1&timestamp=1588413505148","title":"Dubbo Monitor for prometheus"},{"location":"dev-dubbo-monitor/#dubbo-monitor-for-prometheus","text":"","title":"Dubbo Monitor for prometheus"},{"location":"dev-dubbo-monitor/#_1","text":"","title":"\u8c03\u7528\u94fe\u8def"},{"location":"dev-dubbo-monitor/#1-monitorfilter-onresponse","text":"// org.apache.dubbo.monitor.support.MonitorFilter.MonitorListener:onResponse() @Override public void onResponse(Result result, Invoker<?> invoker, Invocation invocation) { if (invoker.getUrl().hasParameter(MONITOR_KEY)) { collect(invoker, invocation, result, RpcContext.getContext().getRemoteHost(), Long.valueOf(invocation.getAttachment(MONITOR_FILTER_START_TIME)), false); getConcurrent(invoker, invocation).decrementAndGet(); // count down } } // org.apache.dubbo.monitor.support.MonitorFilter /** * The collector logic, it will be handled by the default monitor * * @param invoker * @param invocation * @param result the invoke result * @param remoteHost the remote host address * @param start the timestamp the invoke begin * @param error if there is an error on the invoke */ private void collect(Invoker<?> invoker, Invocation invocation, Result result, String remoteHost, long start, boolean error) { try { URL monitorUrl = invoker.getUrl().getUrlParameter(MONITOR_KEY); Monitor monitor = monitorFactory.getMonitor(monitorUrl); if (monitor == null) { return; } URL statisticsURL = createStatisticsUrl(invoker, invocation, result, remoteHost, start, error); monitor.collect(statisticsURL); } catch (Throwable t) { logger.warn(\"Failed to monitor count service \" + invoker.getUrl() + \", cause: \" + t.getMessage(), t); } }","title":"1. MonitorFilter \u7684onResponse"},{"location":"dev-dubbo-monitor/#2","text":"2020-05-02 17:58:25.201 DEBUG 53784 --- [ main] o.a.d.c.e.AdaptiveClassCodeGenerator : [DUBBO] package org.apache.dubbo.monitor; \u53ef\u770b\u5230 MonitorFactory$Adaptive \u7684\u4ee3\u7801 import org.apache.dubbo.common.extension.ExtensionLoader; public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory { public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0) { if (arg0 == null) throw new IllegalArgumentException(\"url == null\"); org.apache.dubbo.common.URL url = arg0; String extName = ( url.getProtocol() == null ? \"dubbo\" : url.getProtocol() ); if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (\" + url.toString() + \") use keys([protocol])\"); org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName); return extension.getMonitor(arg0); } } \u53c2\u6570 org.apache.dubbo.common.URL \u4e3a: dubbo://127.0.0.1:2181/org.apache.dubbo.registry.RegistryService?application=demo3-dubbo-provider&dubbo=2.0.2&logger=slf4j&pid=53784&protocol=registry&qos.enable=false&refer=application%3Ddemo3-dubbo-provider%26dubbo%3D2.0.2%26interface%3Dorg.apache.dubbo.monitor.MonitorService%26logger%3Dslf4j%26pid%3D53784%26qos.enable%3Dfalse%26register.ip%3D192.168.100.230%26release%3D2.7.4.1%26timestamp%3D1588413616161&registry=zookeeper&release=2.7.4.1&timestamp=1588413505148","title":"2. \u6839\u636e\u542f\u52a8\u65e5\u5fd7"},{"location":"dev-oauth2/","text":"https://projects.spring.io/spring-security-oauth/docs/oauth2.html \u627e\u56fe\u7247 https://github.com/terasolunaorg/terasolunaorg.github.com/blob/master/guideline/5.3.0.RELEASE/en/_images/OAuth_OAuth2Architecture.png https://github.com/spring-projects/spring-security/blob/5.3.1.RELEASE/samples/boot/oauth2authorizationserver/README.adoc","title":"Dev oauth2"},{"location":"dev-spring-boot/","text":"\u4e3a\u4ec0\u4e48\u4e0d\u7528 logback.xml \u800c\u7528 logback-spring.xml Spring Boot\u5305\u542b\u8bb8\u591aLogback\u6269\u5c55\uff0c\u53ef\u4ee5\u5e2e\u52a9\u8fdb\u884c\u9ad8\u7ea7\u914d\u7f6e\u3002\u60a8\u53ef\u4ee5\u5728logback-spring.xml\u914d\u7f6e\u6587\u4ef6\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u6269\u5c55\u540d\u3002\u7531\u4e8e\u6807\u51c6logback.xml\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u8fc7\u65e9\uff0c\u56e0\u6b64\u65e0\u6cd5\u5728\u5176\u4e2d\u4f7f\u7528\u6269\u5c55\u3002\u60a8\u9700\u8981\u4f7f\u7528logback-spring.xml\u6216\u5b9a\u4e49 logging.config\u5c5e\u6027\u3002 \u5b98\u65b9\u63a8\u8350\u4f7f\u7528\u7684xml\u540d\u5b57\u7684\u683c\u5f0f\u4e3a\uff1alogback-spring.xml\u800c\u4e0d\u662flogback.xml\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u56e0\u4e3a\u5e26spring\u540e\u7f00\u7684\u53ef\u4ee5\u4f7f\u7528 \u8fd9\u4e2a\u6807\u7b7e\u3002 \u5b98\u65b9\u6587\u6863\uff1ahttps://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-custom-log-configuration \u7c7b\u4f3c\u535a\u6587\uff1ahttps://www.cnblogs.com/luckyliulin/p/10815224.html","title":"Dev spring boot"},{"location":"dev-testcase/","text":"https://docs.spring.io/spring-boot/docs/2.3.0.RELEASE/reference/html/spring-boot-features.html#boot-features-testing https://www.cnblogs.com/fnlingnzb-learner/p/12068505.html https://junit.org/junit5/docs/current/user-guide/#api-evolution","title":"Dev testcase"},{"location":"dsa-indexing/","text":"\u7d22\u5f15 \u00b6 BST 1.\u82e5\u4efb\u610f\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u4e0d\u5927\u4e8e\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\u3002 2.\u82e5\u4efb\u610f\u7ed3\u70b9\u7684\u53f3\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u4e0d\u5c0f\u4e8e\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\u3002 3.\u4efb\u610f\u7ed3\u70b9\u7684\u5de6\u3001\u53f3\u5b50\u6811\u4e5f\u5206\u522b\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811\u3002 R/B Tree \u7ea2\u9ed1\u6811\u7684\u7279\u6027: \uff081\uff09\u6bcf\u4e2a\u8282\u70b9\u6216\u8005\u662f\u9ed1\u8272\uff0c\u6216\u8005\u662f\u7ea2\u8272\u3002 \uff082\uff09\u6839\u8282\u70b9\u662f\u9ed1\u8272\u3002 \uff083\uff09\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff08NIL\uff09\u662f\u9ed1\u8272\u3002 [\u6ce8\u610f\uff1a\u8fd9\u91cc\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u6307\u4e3a\u7a7a(NIL\u6216NULL)\u7684\u53f6\u5b50\u8282\u70b9\uff01] \uff084\uff09\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272\u7684\u3002 \uff085\uff09\u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e0a\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8282\u70b9\u3002 \u6ce8\u610f\uff1a (01) \u7279\u6027(3)\u4e2d\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u53ea\u4e3a\u7a7a(NIL\u6216null)\u7684\u8282\u70b9\u3002 (02) \u7279\u6027(5)\uff0c\u786e\u4fdd\u6ca1\u6709\u4e00\u6761\u8def\u5f84\u4f1a\u6bd4\u5176\u4ed6\u8def\u5f84\u957f\u51fa\u4fe9\u500d\u3002\u56e0\u800c\uff0c\u7ea2\u9ed1\u6811\u662f\u76f8\u5bf9\u662f\u63a5\u8fd1\u5e73\u8861\u7684\u4e8c\u53c9\u6811 \u7ea2\u9ed1\u6811\u662f\u6bcf\u4e2a\u8282\u70b9\u90fd\u5e26\u6709\u989c\u8272\u5c5e\u6027\u7684\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u989c\u8272\u6216\u7ea2\u8272\u6216\u9ed1\u8272\u3002 [3] \u5728\u4e8c\u53c9\u67e5\u627e\u6811\u5f3a\u5236\u4e00\u822c\u8981\u6c42\u4ee5\u5916\uff0c\u5bf9\u4e8e\u4efb\u4f55\u6709\u6548\u7684\u7ea2\u9ed1\u6811\u6211\u4eec\u589e\u52a0\u4e86\u5982\u4e0b\u7684\u989d\u5916\u8981\u6c42: \u6027\u8d281. \u8282\u70b9\u662f\u7ea2\u8272\u6216\u9ed1\u8272\u3002 [3] \u6027\u8d282. \u6839\u8282\u70b9\u662f\u9ed1\u8272\u3002 [3] \u6027\u8d283.\u6240\u6709\u53f6\u5b50\u90fd\u662f\u9ed1\u8272\u3002\uff08\u53f6\u5b50\u662fNUIL\u8282\u70b9\uff09 [3] \u6027\u8d284. \u6bcf\u4e2a\u7ea2\u8272\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u90fd\u662f\u9ed1\u8272\u3002\uff08\u4ece\u6bcf\u4e2a\u53f6\u5b50\u5230\u6839\u7684\u6240\u6709\u8def\u5f84\u4e0a\u4e0d\u80fd\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff09 \u6027\u8d285.. \u4ece\u4efb\u4e00\u8282\u70b9\u5230\u5176\u6bcf\u4e2a\u53f6\u5b50\u7684\u6240\u6709\u8def\u5f84\u90fd\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\u3002 [3] \u8fd9\u4e9b\u7ea6\u675f\u5f3a\u5236\u4e86\u7ea2\u9ed1\u6811\u7684\u5173\u952e\u6027\u8d28: \u4ece\u6839\u5230\u53f6\u5b50\u7684\u6700\u957f\u7684\u53ef\u80fd\u8def\u5f84\u4e0d\u591a\u4e8e\u6700\u77ed\u7684\u53ef\u80fd\u8def\u5f84\u7684\u4e24\u500d\u957f\u3002\u7ed3\u679c\u662f\u8fd9\u4e2a\u6811\u5927\u81f4\u4e0a\u662f\u5e73\u8861\u7684\u3002\u56e0\u4e3a\u64cd\u4f5c\u6bd4\u5982\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u67d0\u4e2a\u503c\u7684\u6700\u574f\u60c5\u51b5\u65f6\u95f4\u90fd\u8981\u6c42\u4e0e\u6811\u7684\u9ad8\u5ea6\u6210\u6bd4\u4f8b\uff0c\u8fd9\u4e2a\u5728\u9ad8\u5ea6\u4e0a\u7684\u7406\u8bba\u4e0a\u9650\u5141\u8bb8\u7ea2\u9ed1\u6811\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u90fd\u662f\u9ad8\u6548\u7684\uff0c\u800c\u4e0d\u540c\u4e8e\u666e\u901a\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u3002 [3] \u662f\u6027\u8d284\u5bfc\u81f4\u8def\u5f84\u4e0a\u4e0d\u80fd\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\u786e\u4fdd\u4e86\u8fd9\u4e2a\u7ed3\u679c\u3002\u6700\u77ed\u7684\u53ef\u80fd\u8def\u5f84\u90fd\u662f\u9ed1\u8272\u8282\u70b9\uff0c\u6700\u957f\u7684\u53ef\u80fd\u8def\u5f84\u6709\u4ea4\u66ff\u7684\u7ea2\u8272\u548c\u9ed1\u8272\u8282\u70b9\u3002\u56e0\u4e3a\u6839\u636e\u6027\u8d285\u6240\u6709\u6700\u957f\u7684\u8def\u5f84\u90fd\u6709\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\uff0c\u8fd9\u5c31\u8868\u660e\u4e86\u6ca1\u6709\u8def\u5f84\u80fd\u591a\u4e8e\u4efb\u4f55\u5176\u4ed6\u8def\u5f84\u7684\u4e24\u500d\u957f\u3002 [3] \u56e0\u4e3a\u7ea2\u9ed1\u6811\u662f\u4e00\u79cd\u7279\u5316\u7684\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u6240\u4ee5\u7ea2\u9ed1\u6811\u4e0a\u7684\u53ea\u8bfb\u64cd\u884c\u4e0e\u666e\u901a\u4e8c\u53c9\u67e5\u627e\u6811\u76f8\u540c\u3002 [2] B Tree \u6839\u636e Knuth \u7684\u5b9a\u4e49\uff0c\u4e00\u4e2a m \u9636\u7684B\u6811\u662f\u4e00\u4e2a\u6709\u4ee5\u4e0b\u5c5e\u6027\u7684\u6811\uff1a \u6bcf\u4e00\u4e2a\u8282\u70b9\u6700\u591a\u6709 m \u4e2a\u5b50\u8282\u70b9 \u6bcf\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff08\u9664\u6839\u8282\u70b9\uff09\u6700\u5c11\u6709 \u2308m/2\u2309 \u4e2a\u5b50\u8282\u70b9 \u5982\u679c\u6839\u8282\u70b9\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5b83\u81f3\u5c11\u6709\u4e24\u4e2a\u5b50\u8282\u70b9 \u6709 k \u4e2a\u5b50\u8282\u70b9\u7684\u975e\u53f6\u5b50\u8282\u70b9\u62e5\u6709 k \u2212 1 \u4e2a\u952e \u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42 \u6bcf\u4e00\u4e2a\u5185\u90e8\u8282\u70b9\u7684\u952e\u5c06\u8282\u70b9\u7684\u5b50\u6811\u5206\u5f00\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u5185\u90e8\u8282\u70b9\u67093\u4e2a\u5b50\u8282\u70b9\uff08\u5b50\u6811\uff09\uff0c\u90a3\u4e48\u5b83\u5c31\u5fc5\u987b\u6709\u4e24\u4e2a\u952e\uff1a a1 \u548c a2 \u3002\u5de6\u8fb9\u5b50\u6811\u7684\u6240\u6709\u503c\u90fd\u5fc5\u987b\u5c0f\u4e8e a1 \uff0c\u4e2d\u95f4\u5b50\u6811\u7684\u6240\u6709\u503c\u90fd\u5fc5\u987b\u5728 a1 \u548ca2 \u4e4b\u95f4\uff0c\u53f3\u8fb9\u5b50\u6811\u7684\u6240\u6709\u503c\u90fd\u5fc5\u987b\u5927\u4e8e a2 \u3002 B+ Tree \u5728B+\u6811\u4e2d\u7684\u8282\u70b9\u901a\u5e38\u88ab\u8868\u793a\u4e3a\u4e00\u7ec4\u6709\u5e8f\u7684\u5143\u7d20\u548c\u5b50\u6307\u9488\u3002\u5982\u679c\u6b64B+\u6811\u7684\u9636\u6570\u662fm\uff0c\u5219\u9664\u4e86\u6839\u4e4b\u5916\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u6700\u5c11 m/2 \u4e2a\u5143\u7d20\u6700\u591a m-1 \u4e2a\u5143\u7d20\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\u7ed3\u70b9\u6709\u6700\u591a m \u4e2a\u5b50\u6307\u9488\u3002\u5bf9\u4e8e\u6240\u6709\u5185\u90e8\u8282\u70b9\uff0c\u5b50\u6307\u9488\u7684\u6570\u76ee\u603b\u662f\u6bd4\u5143\u7d20\u7684\u6570\u76ee\u591a\u4e00\u4e2a\u3002\u6240\u6709\u53f6\u5b50\u90fd\u5728\u76f8\u540c\u7684\u9ad8\u5ea6\u4e0a\uff0c\u53f6\u7ed3\u70b9\u672c\u8eab\u6309\u5173\u952e\u5b57\u5927\u5c0f\u4ece\u5c0f\u5230\u5927\u94fe\u63a5\u3002 Trie Tree AVL Tree Splay Tree","title":"\u7d22\u5f15"},{"location":"dsa-indexing/#_1","text":"BST 1.\u82e5\u4efb\u610f\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u4e0d\u5927\u4e8e\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\u3002 2.\u82e5\u4efb\u610f\u7ed3\u70b9\u7684\u53f3\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u4e0d\u5c0f\u4e8e\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\u3002 3.\u4efb\u610f\u7ed3\u70b9\u7684\u5de6\u3001\u53f3\u5b50\u6811\u4e5f\u5206\u522b\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811\u3002 R/B Tree \u7ea2\u9ed1\u6811\u7684\u7279\u6027: \uff081\uff09\u6bcf\u4e2a\u8282\u70b9\u6216\u8005\u662f\u9ed1\u8272\uff0c\u6216\u8005\u662f\u7ea2\u8272\u3002 \uff082\uff09\u6839\u8282\u70b9\u662f\u9ed1\u8272\u3002 \uff083\uff09\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff08NIL\uff09\u662f\u9ed1\u8272\u3002 [\u6ce8\u610f\uff1a\u8fd9\u91cc\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u6307\u4e3a\u7a7a(NIL\u6216NULL)\u7684\u53f6\u5b50\u8282\u70b9\uff01] \uff084\uff09\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272\u7684\u3002 \uff085\uff09\u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e0a\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8282\u70b9\u3002 \u6ce8\u610f\uff1a (01) \u7279\u6027(3)\u4e2d\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u53ea\u4e3a\u7a7a(NIL\u6216null)\u7684\u8282\u70b9\u3002 (02) \u7279\u6027(5)\uff0c\u786e\u4fdd\u6ca1\u6709\u4e00\u6761\u8def\u5f84\u4f1a\u6bd4\u5176\u4ed6\u8def\u5f84\u957f\u51fa\u4fe9\u500d\u3002\u56e0\u800c\uff0c\u7ea2\u9ed1\u6811\u662f\u76f8\u5bf9\u662f\u63a5\u8fd1\u5e73\u8861\u7684\u4e8c\u53c9\u6811 \u7ea2\u9ed1\u6811\u662f\u6bcf\u4e2a\u8282\u70b9\u90fd\u5e26\u6709\u989c\u8272\u5c5e\u6027\u7684\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u989c\u8272\u6216\u7ea2\u8272\u6216\u9ed1\u8272\u3002 [3] \u5728\u4e8c\u53c9\u67e5\u627e\u6811\u5f3a\u5236\u4e00\u822c\u8981\u6c42\u4ee5\u5916\uff0c\u5bf9\u4e8e\u4efb\u4f55\u6709\u6548\u7684\u7ea2\u9ed1\u6811\u6211\u4eec\u589e\u52a0\u4e86\u5982\u4e0b\u7684\u989d\u5916\u8981\u6c42: \u6027\u8d281. \u8282\u70b9\u662f\u7ea2\u8272\u6216\u9ed1\u8272\u3002 [3] \u6027\u8d282. \u6839\u8282\u70b9\u662f\u9ed1\u8272\u3002 [3] \u6027\u8d283.\u6240\u6709\u53f6\u5b50\u90fd\u662f\u9ed1\u8272\u3002\uff08\u53f6\u5b50\u662fNUIL\u8282\u70b9\uff09 [3] \u6027\u8d284. \u6bcf\u4e2a\u7ea2\u8272\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u90fd\u662f\u9ed1\u8272\u3002\uff08\u4ece\u6bcf\u4e2a\u53f6\u5b50\u5230\u6839\u7684\u6240\u6709\u8def\u5f84\u4e0a\u4e0d\u80fd\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff09 \u6027\u8d285.. \u4ece\u4efb\u4e00\u8282\u70b9\u5230\u5176\u6bcf\u4e2a\u53f6\u5b50\u7684\u6240\u6709\u8def\u5f84\u90fd\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\u3002 [3] \u8fd9\u4e9b\u7ea6\u675f\u5f3a\u5236\u4e86\u7ea2\u9ed1\u6811\u7684\u5173\u952e\u6027\u8d28: \u4ece\u6839\u5230\u53f6\u5b50\u7684\u6700\u957f\u7684\u53ef\u80fd\u8def\u5f84\u4e0d\u591a\u4e8e\u6700\u77ed\u7684\u53ef\u80fd\u8def\u5f84\u7684\u4e24\u500d\u957f\u3002\u7ed3\u679c\u662f\u8fd9\u4e2a\u6811\u5927\u81f4\u4e0a\u662f\u5e73\u8861\u7684\u3002\u56e0\u4e3a\u64cd\u4f5c\u6bd4\u5982\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u67d0\u4e2a\u503c\u7684\u6700\u574f\u60c5\u51b5\u65f6\u95f4\u90fd\u8981\u6c42\u4e0e\u6811\u7684\u9ad8\u5ea6\u6210\u6bd4\u4f8b\uff0c\u8fd9\u4e2a\u5728\u9ad8\u5ea6\u4e0a\u7684\u7406\u8bba\u4e0a\u9650\u5141\u8bb8\u7ea2\u9ed1\u6811\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u90fd\u662f\u9ad8\u6548\u7684\uff0c\u800c\u4e0d\u540c\u4e8e\u666e\u901a\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u3002 [3] \u662f\u6027\u8d284\u5bfc\u81f4\u8def\u5f84\u4e0a\u4e0d\u80fd\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\u786e\u4fdd\u4e86\u8fd9\u4e2a\u7ed3\u679c\u3002\u6700\u77ed\u7684\u53ef\u80fd\u8def\u5f84\u90fd\u662f\u9ed1\u8272\u8282\u70b9\uff0c\u6700\u957f\u7684\u53ef\u80fd\u8def\u5f84\u6709\u4ea4\u66ff\u7684\u7ea2\u8272\u548c\u9ed1\u8272\u8282\u70b9\u3002\u56e0\u4e3a\u6839\u636e\u6027\u8d285\u6240\u6709\u6700\u957f\u7684\u8def\u5f84\u90fd\u6709\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\uff0c\u8fd9\u5c31\u8868\u660e\u4e86\u6ca1\u6709\u8def\u5f84\u80fd\u591a\u4e8e\u4efb\u4f55\u5176\u4ed6\u8def\u5f84\u7684\u4e24\u500d\u957f\u3002 [3] \u56e0\u4e3a\u7ea2\u9ed1\u6811\u662f\u4e00\u79cd\u7279\u5316\u7684\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u6240\u4ee5\u7ea2\u9ed1\u6811\u4e0a\u7684\u53ea\u8bfb\u64cd\u884c\u4e0e\u666e\u901a\u4e8c\u53c9\u67e5\u627e\u6811\u76f8\u540c\u3002 [2] B Tree \u6839\u636e Knuth \u7684\u5b9a\u4e49\uff0c\u4e00\u4e2a m \u9636\u7684B\u6811\u662f\u4e00\u4e2a\u6709\u4ee5\u4e0b\u5c5e\u6027\u7684\u6811\uff1a \u6bcf\u4e00\u4e2a\u8282\u70b9\u6700\u591a\u6709 m \u4e2a\u5b50\u8282\u70b9 \u6bcf\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff08\u9664\u6839\u8282\u70b9\uff09\u6700\u5c11\u6709 \u2308m/2\u2309 \u4e2a\u5b50\u8282\u70b9 \u5982\u679c\u6839\u8282\u70b9\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5b83\u81f3\u5c11\u6709\u4e24\u4e2a\u5b50\u8282\u70b9 \u6709 k \u4e2a\u5b50\u8282\u70b9\u7684\u975e\u53f6\u5b50\u8282\u70b9\u62e5\u6709 k \u2212 1 \u4e2a\u952e \u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42 \u6bcf\u4e00\u4e2a\u5185\u90e8\u8282\u70b9\u7684\u952e\u5c06\u8282\u70b9\u7684\u5b50\u6811\u5206\u5f00\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u5185\u90e8\u8282\u70b9\u67093\u4e2a\u5b50\u8282\u70b9\uff08\u5b50\u6811\uff09\uff0c\u90a3\u4e48\u5b83\u5c31\u5fc5\u987b\u6709\u4e24\u4e2a\u952e\uff1a a1 \u548c a2 \u3002\u5de6\u8fb9\u5b50\u6811\u7684\u6240\u6709\u503c\u90fd\u5fc5\u987b\u5c0f\u4e8e a1 \uff0c\u4e2d\u95f4\u5b50\u6811\u7684\u6240\u6709\u503c\u90fd\u5fc5\u987b\u5728 a1 \u548ca2 \u4e4b\u95f4\uff0c\u53f3\u8fb9\u5b50\u6811\u7684\u6240\u6709\u503c\u90fd\u5fc5\u987b\u5927\u4e8e a2 \u3002 B+ Tree \u5728B+\u6811\u4e2d\u7684\u8282\u70b9\u901a\u5e38\u88ab\u8868\u793a\u4e3a\u4e00\u7ec4\u6709\u5e8f\u7684\u5143\u7d20\u548c\u5b50\u6307\u9488\u3002\u5982\u679c\u6b64B+\u6811\u7684\u9636\u6570\u662fm\uff0c\u5219\u9664\u4e86\u6839\u4e4b\u5916\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u6700\u5c11 m/2 \u4e2a\u5143\u7d20\u6700\u591a m-1 \u4e2a\u5143\u7d20\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\u7ed3\u70b9\u6709\u6700\u591a m \u4e2a\u5b50\u6307\u9488\u3002\u5bf9\u4e8e\u6240\u6709\u5185\u90e8\u8282\u70b9\uff0c\u5b50\u6307\u9488\u7684\u6570\u76ee\u603b\u662f\u6bd4\u5143\u7d20\u7684\u6570\u76ee\u591a\u4e00\u4e2a\u3002\u6240\u6709\u53f6\u5b50\u90fd\u5728\u76f8\u540c\u7684\u9ad8\u5ea6\u4e0a\uff0c\u53f6\u7ed3\u70b9\u672c\u8eab\u6309\u5173\u952e\u5b57\u5927\u5c0f\u4ece\u5c0f\u5230\u5927\u94fe\u63a5\u3002 Trie Tree AVL Tree Splay Tree","title":"\u7d22\u5f15"},{"location":"dsa-sort/","text":"\u6392\u5e8f \u00b6 \u6bd4\u8f83\u6392\u5e8f \u00b6 \u6392\u5e8f\u53ef\u89c6\u5316 \u5192\u6ce1\u6392\u5e8f \u00b6 void bubbleSort(int arr[]) { int n = arr.length; for (int i = 0; i < n-1; i++) for (int j = 0; j < n-i-1; j++) if (arr[j] > arr[j+1]) { // swap arr[j+1] and arr[i] int temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; } } // An optimized version of Bubble Sort void bubbleSort(int arr[], int n) { int i, j, temp; boolean swapped; for (i = 0; i < n - 1; i++) { swapped = false; for (j = 0; j < n - i - 1; j++) { if (arr[j] > arr[j + 1]) { // swap arr[j] and arr[j+1] temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; swapped = true; } } // IF no two elements were // swapped by inner loop, then break if (swapped == false) break; } } \u9009\u62e9\u6392\u5e8f \u00b6 void selectionSort(int arr[]) { int n = arr.length; // One by one move boundary of unsorted subarray for (int i = 0; i < n-1; i++) { // Find the minimum element in unsorted array int min_idx = i; for (int j = i+1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; // Swap the found minimum element with the first // element int temp = arr[min_idx]; arr[min_idx] = arr[i]; arr[i] = temp; } } \u63d2\u5165\u6392\u5e8f \u00b6 void insertionSort(int arr[]) { int n = arr.length; for (int i = 1; i < n; ++i) { int key = arr[i]; int j = i - 1; /* Move elements of arr[0..i-1], that are greater than key, to one position ahead of their current position */ while (j >= 0 && arr[j] > key) { arr[j + 1] = arr[j]; j = j - 1; } arr[j + 1] = key; } } \u5f52\u5e76\u6392\u5e8f \u00b6 // Merges two subarrays of arr[]. // First subarray is arr[l..m] // Second subarray is arr[m+1..r] void merge(int arr[], int l, int m, int r) { // Find sizes of two subarrays to be merged int n1 = m - l + 1; int n2 = r - m; /* Create temp arrays */ int L[] = new int[n1]; int R[] = new int[n2]; /*Copy data to temp arrays*/ for (int i = 0; i < n1; ++i) L[i] = arr[l + i]; for (int j = 0; j < n2; ++j) R[j] = arr[m + 1 + j]; /* Merge the temp arrays */ // Initial indexes of first and second subarrays int i = 0, j = 0; // Initial index of merged subarry array int k = l; while (i < n1 && j < n2) { if (L[i] <= R[j]) { arr[k] = L[i]; i++; } else { arr[k] = R[j]; j++; } k++; } /* Copy remaining elements of L[] if any */ while (i < n1) { arr[k] = L[i]; i++; k++; } /* Copy remaining elements of R[] if any */ while (j < n2) { arr[k] = R[j]; j++; k++; } } // Main function that sorts arr[l..r] using merge() void sort(int arr[], int l, int r) { if (l < r) { // Find the middle point int m = (l + r) / 2; // Sort first and second halves sort(arr, l, m); sort(arr, m + 1, r); // Merge the sorted halves merge(arr, l, m, r); } } \u5e0c\u5c14\u6392\u5e8f \u00b6 /* function to sort arr using shellSort */ int sort(int arr[]) { int n = arr.length; // Start with a big gap, then reduce the gap for (int gap = n/2; gap > 0; gap /= 2) { // Do a gapped insertion sort for this gap size. // The first gap elements a[0..gap-1] are already // in gapped order keep adding one more element // until the entire array is gap sorted for (int i = gap; i < n; i += 1) { // add a[i] to the elements that have been gap // sorted save a[i] in temp and make a hole at // position i int temp = arr[i]; // shift earlier gap-sorted elements up until // the correct location for a[i] is found int j; for (j = i; j >= gap && arr[j - gap] > temp; j -= gap) arr[j] = arr[j - gap]; // put temp (the original a[i]) in its correct // location arr[j] = temp; } } return 0; } \u5feb\u901f\u6392\u5e8f \u00b6 /* This function takes last element as pivot, places the pivot element at its correct position in sorted array, and places all smaller (smaller than pivot) to left of pivot and all greater elements to right of pivot */ int partition(int arr[], int low, int high) { int pivot = arr[high]; int i = (low-1); // index of smaller element for (int j=low; j<high; j++) { // If current element is smaller than the pivot if (arr[j] < pivot) { i++; // swap arr[i] and arr[j] int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } } // swap arr[i+1] and arr[high] (or pivot) int temp = arr[i+1]; arr[i+1] = arr[high]; arr[high] = temp; return i+1; } /* The main function that implements QuickSort() arr[] --> Array to be sorted, low --> Starting index, high --> Ending index */ void sort(int arr[], int low, int high) { if (low < high) { /* pi is partitioning index, arr[pi] is now at right place */ int pi = partition(arr, low, high); // Recursively sort elements before // partition and after partition sort(arr, low, pi-1); sort(arr, pi+1, high); } } \u5806\u6392\u5e8f \u00b6 void sort(int arr[]) { int n = arr.length; // Build heap (rearrange array) for (int i = n / 2 - 1; i >= 0; i--) heapify(arr, n, i); // One by one extract an element from heap for (int i=n-1; i>0; i--) { // Move current root to end int temp = arr[0]; arr[0] = arr[i]; arr[i] = temp; // call max heapify on the reduced heap heapify(arr, i, 0); } } // To heapify a subtree rooted with node i which is // an index in arr[]. n is size of heap void heapify(int arr[], int n, int i) { int largest = i; // Initialize largest as root int l = 2*i + 1; // left = 2*i + 1 int r = 2*i + 2; // right = 2*i + 2 // If left child is larger than root if (l < n && arr[l] > arr[largest]) largest = l; // If right child is larger than largest so far if (r < n && arr[r] > arr[largest]) largest = r; // If largest is not root if (largest != i) { int swap = arr[i]; arr[i] = arr[largest]; arr[largest] = swap; // Recursively heapify the affected sub-tree heapify(arr, n, largest); } } \u57fa\u6570\u6392\u5e8f \u00b6 // A utility function to get maximum value in arr[] int getMax(int arr[], int n) { int mx = arr[0]; for (int i = 1; i < n; i++) if (arr[i] > mx) mx = arr[i]; return mx; } // A function to do counting sort of arr[] according to // the digit represented by exp. void countSort(int arr[], int n, int exp) { int output[] = new int[n]; // output array int i; int count[] = new int[10]; Arrays.fill(count,0); // Store count of occurrences in count[] for (i = 0; i < n; i++) count[ (arr[i]/exp)%10 ]++; // Change count[i] so that count[i] now contains // actual position of this digit in output[] for (i = 1; i < 10; i++) count[i] += count[i - 1]; // Build the output array for (i = n - 1; i >= 0; i--) { output[count[ (arr[i]/exp)%10 ] - 1] = arr[i]; count[ (arr[i]/exp)%10 ]--; } // Copy the output array to arr[], so that arr[] now // contains sorted numbers according to curent digit for (i = 0; i < n; i++) arr[i] = output[i]; } // The main function to that sorts arr[] of size n using // Radix Sort void radixsort(int arr[], int n) { // Find the maximum number to know number of digits int m = getMax(arr, n); // Do counting sort for every digit. Note that instead // of passing digit number, exp is passed. exp is 10^i // where i is current digit number for (int exp = 1; m/exp > 0; exp *= 10) countSort(arr, n, exp); } \u8ba1\u6570\u6392\u5e8f \u00b6 void sort(char arr[]) { int n = arr.length; // The output character array that will have sorted arr char output[] = new char[n]; // Create a count array to store count of inidividul // characters and initialize count array as 0 int count[] = new int[256]; for (int i=0; i<256; ++i) count[i] = 0; // store count of each character for (int i=0; i<n; ++i) ++count[arr[i]]; // Change count[i] so that count[i] now contains actual // position of this character in output array for (int i=1; i<=255; ++i) count[i] += count[i-1]; // Build the output character array // To make it stable we are operating in reverse order. for (int i = n-1; i>=0; i--) { output[count[arr[i]]-1] = arr[i]; --count[arr[i]]; } // Copy the output array to arr, so that arr now // contains sorted characters for (int i = 0; i<n; ++i) arr[i] = output[i]; } \u6876\u6392\u5e8f \u00b6 void bucketSort(int[] intArr, int noOfBuckets){ // Create bucket array List<Integer>[] buckets = new List[noOfBuckets]; // Associate a list with each index // in the bucket array for(int i = 0; i < noOfBuckets; i++){ buckets[i] = new LinkedList<>(); } // Assign numbers from array to the proper bucket // by using hashing function for(int num : intArr){ //System.out.println(\"hash- \" + hash(num)); buckets[hash(num)].add(num); } // sort buckets for(List<Integer> bucket : buckets){ Collections.sort(bucket); } int i = 0; // Merge buckets to get sorted array for(List<Integer> bucket : buckets){ for(int num : bucket){ intArr[i++] = num; } } } // A very simple hash function int hash(int num){ return num/10; } \u9644\u5f55 \u00b6 Data Structure Visualizations \u5e38\u7528\u641c\u7d22\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6","title":"\u6392\u5e8f"},{"location":"dsa-sort/#_1","text":"","title":"\u6392\u5e8f"},{"location":"dsa-sort/#_2","text":"\u6392\u5e8f\u53ef\u89c6\u5316","title":"\u6bd4\u8f83\u6392\u5e8f"},{"location":"dsa-sort/#_3","text":"void bubbleSort(int arr[]) { int n = arr.length; for (int i = 0; i < n-1; i++) for (int j = 0; j < n-i-1; j++) if (arr[j] > arr[j+1]) { // swap arr[j+1] and arr[i] int temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; } } // An optimized version of Bubble Sort void bubbleSort(int arr[], int n) { int i, j, temp; boolean swapped; for (i = 0; i < n - 1; i++) { swapped = false; for (j = 0; j < n - i - 1; j++) { if (arr[j] > arr[j + 1]) { // swap arr[j] and arr[j+1] temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; swapped = true; } } // IF no two elements were // swapped by inner loop, then break if (swapped == false) break; } }","title":"\u5192\u6ce1\u6392\u5e8f"},{"location":"dsa-sort/#_4","text":"void selectionSort(int arr[]) { int n = arr.length; // One by one move boundary of unsorted subarray for (int i = 0; i < n-1; i++) { // Find the minimum element in unsorted array int min_idx = i; for (int j = i+1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; // Swap the found minimum element with the first // element int temp = arr[min_idx]; arr[min_idx] = arr[i]; arr[i] = temp; } }","title":"\u9009\u62e9\u6392\u5e8f"},{"location":"dsa-sort/#_5","text":"void insertionSort(int arr[]) { int n = arr.length; for (int i = 1; i < n; ++i) { int key = arr[i]; int j = i - 1; /* Move elements of arr[0..i-1], that are greater than key, to one position ahead of their current position */ while (j >= 0 && arr[j] > key) { arr[j + 1] = arr[j]; j = j - 1; } arr[j + 1] = key; } }","title":"\u63d2\u5165\u6392\u5e8f"},{"location":"dsa-sort/#_6","text":"// Merges two subarrays of arr[]. // First subarray is arr[l..m] // Second subarray is arr[m+1..r] void merge(int arr[], int l, int m, int r) { // Find sizes of two subarrays to be merged int n1 = m - l + 1; int n2 = r - m; /* Create temp arrays */ int L[] = new int[n1]; int R[] = new int[n2]; /*Copy data to temp arrays*/ for (int i = 0; i < n1; ++i) L[i] = arr[l + i]; for (int j = 0; j < n2; ++j) R[j] = arr[m + 1 + j]; /* Merge the temp arrays */ // Initial indexes of first and second subarrays int i = 0, j = 0; // Initial index of merged subarry array int k = l; while (i < n1 && j < n2) { if (L[i] <= R[j]) { arr[k] = L[i]; i++; } else { arr[k] = R[j]; j++; } k++; } /* Copy remaining elements of L[] if any */ while (i < n1) { arr[k] = L[i]; i++; k++; } /* Copy remaining elements of R[] if any */ while (j < n2) { arr[k] = R[j]; j++; k++; } } // Main function that sorts arr[l..r] using merge() void sort(int arr[], int l, int r) { if (l < r) { // Find the middle point int m = (l + r) / 2; // Sort first and second halves sort(arr, l, m); sort(arr, m + 1, r); // Merge the sorted halves merge(arr, l, m, r); } }","title":"\u5f52\u5e76\u6392\u5e8f"},{"location":"dsa-sort/#_7","text":"/* function to sort arr using shellSort */ int sort(int arr[]) { int n = arr.length; // Start with a big gap, then reduce the gap for (int gap = n/2; gap > 0; gap /= 2) { // Do a gapped insertion sort for this gap size. // The first gap elements a[0..gap-1] are already // in gapped order keep adding one more element // until the entire array is gap sorted for (int i = gap; i < n; i += 1) { // add a[i] to the elements that have been gap // sorted save a[i] in temp and make a hole at // position i int temp = arr[i]; // shift earlier gap-sorted elements up until // the correct location for a[i] is found int j; for (j = i; j >= gap && arr[j - gap] > temp; j -= gap) arr[j] = arr[j - gap]; // put temp (the original a[i]) in its correct // location arr[j] = temp; } } return 0; }","title":"\u5e0c\u5c14\u6392\u5e8f"},{"location":"dsa-sort/#_8","text":"/* This function takes last element as pivot, places the pivot element at its correct position in sorted array, and places all smaller (smaller than pivot) to left of pivot and all greater elements to right of pivot */ int partition(int arr[], int low, int high) { int pivot = arr[high]; int i = (low-1); // index of smaller element for (int j=low; j<high; j++) { // If current element is smaller than the pivot if (arr[j] < pivot) { i++; // swap arr[i] and arr[j] int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } } // swap arr[i+1] and arr[high] (or pivot) int temp = arr[i+1]; arr[i+1] = arr[high]; arr[high] = temp; return i+1; } /* The main function that implements QuickSort() arr[] --> Array to be sorted, low --> Starting index, high --> Ending index */ void sort(int arr[], int low, int high) { if (low < high) { /* pi is partitioning index, arr[pi] is now at right place */ int pi = partition(arr, low, high); // Recursively sort elements before // partition and after partition sort(arr, low, pi-1); sort(arr, pi+1, high); } }","title":"\u5feb\u901f\u6392\u5e8f"},{"location":"dsa-sort/#_9","text":"void sort(int arr[]) { int n = arr.length; // Build heap (rearrange array) for (int i = n / 2 - 1; i >= 0; i--) heapify(arr, n, i); // One by one extract an element from heap for (int i=n-1; i>0; i--) { // Move current root to end int temp = arr[0]; arr[0] = arr[i]; arr[i] = temp; // call max heapify on the reduced heap heapify(arr, i, 0); } } // To heapify a subtree rooted with node i which is // an index in arr[]. n is size of heap void heapify(int arr[], int n, int i) { int largest = i; // Initialize largest as root int l = 2*i + 1; // left = 2*i + 1 int r = 2*i + 2; // right = 2*i + 2 // If left child is larger than root if (l < n && arr[l] > arr[largest]) largest = l; // If right child is larger than largest so far if (r < n && arr[r] > arr[largest]) largest = r; // If largest is not root if (largest != i) { int swap = arr[i]; arr[i] = arr[largest]; arr[largest] = swap; // Recursively heapify the affected sub-tree heapify(arr, n, largest); } }","title":"\u5806\u6392\u5e8f"},{"location":"dsa-sort/#_10","text":"// A utility function to get maximum value in arr[] int getMax(int arr[], int n) { int mx = arr[0]; for (int i = 1; i < n; i++) if (arr[i] > mx) mx = arr[i]; return mx; } // A function to do counting sort of arr[] according to // the digit represented by exp. void countSort(int arr[], int n, int exp) { int output[] = new int[n]; // output array int i; int count[] = new int[10]; Arrays.fill(count,0); // Store count of occurrences in count[] for (i = 0; i < n; i++) count[ (arr[i]/exp)%10 ]++; // Change count[i] so that count[i] now contains // actual position of this digit in output[] for (i = 1; i < 10; i++) count[i] += count[i - 1]; // Build the output array for (i = n - 1; i >= 0; i--) { output[count[ (arr[i]/exp)%10 ] - 1] = arr[i]; count[ (arr[i]/exp)%10 ]--; } // Copy the output array to arr[], so that arr[] now // contains sorted numbers according to curent digit for (i = 0; i < n; i++) arr[i] = output[i]; } // The main function to that sorts arr[] of size n using // Radix Sort void radixsort(int arr[], int n) { // Find the maximum number to know number of digits int m = getMax(arr, n); // Do counting sort for every digit. Note that instead // of passing digit number, exp is passed. exp is 10^i // where i is current digit number for (int exp = 1; m/exp > 0; exp *= 10) countSort(arr, n, exp); }","title":"\u57fa\u6570\u6392\u5e8f"},{"location":"dsa-sort/#_11","text":"void sort(char arr[]) { int n = arr.length; // The output character array that will have sorted arr char output[] = new char[n]; // Create a count array to store count of inidividul // characters and initialize count array as 0 int count[] = new int[256]; for (int i=0; i<256; ++i) count[i] = 0; // store count of each character for (int i=0; i<n; ++i) ++count[arr[i]]; // Change count[i] so that count[i] now contains actual // position of this character in output array for (int i=1; i<=255; ++i) count[i] += count[i-1]; // Build the output character array // To make it stable we are operating in reverse order. for (int i = n-1; i>=0; i--) { output[count[arr[i]]-1] = arr[i]; --count[arr[i]]; } // Copy the output array to arr, so that arr now // contains sorted characters for (int i = 0; i<n; ++i) arr[i] = output[i]; }","title":"\u8ba1\u6570\u6392\u5e8f"},{"location":"dsa-sort/#_12","text":"void bucketSort(int[] intArr, int noOfBuckets){ // Create bucket array List<Integer>[] buckets = new List[noOfBuckets]; // Associate a list with each index // in the bucket array for(int i = 0; i < noOfBuckets; i++){ buckets[i] = new LinkedList<>(); } // Assign numbers from array to the proper bucket // by using hashing function for(int num : intArr){ //System.out.println(\"hash- \" + hash(num)); buckets[hash(num)].add(num); } // sort buckets for(List<Integer> bucket : buckets){ Collections.sort(bucket); } int i = 0; // Merge buckets to get sorted array for(List<Integer> bucket : buckets){ for(int num : bucket){ intArr[i++] = num; } } } // A very simple hash function int hash(int num){ return num/10; }","title":"\u6876\u6392\u5e8f"},{"location":"dsa-sort/#_13","text":"Data Structure Visualizations \u5e38\u7528\u641c\u7d22\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6","title":"\u9644\u5f55"},{"location":"env-dotfiles/","text":"tmux + vim + zsh https://github.com/realcaiying/dotfiles","title":"dotfile"},{"location":"env-linux/","text":"Linux \u7ec8\u7aef\u4e0b\u7684\u9ad8\u6548\u5de5\u5177 \u00b6 \u63a8\u8350\u5de5\u5177 \u5176\u4ed6\u7c7b\u4f3c \u7b80\u4ecb neovim vim \u66f4\u73b0\u4ee3\u5316\u7684 vim zsh \u66f4\u597d\u7528\u7684 shell tmux screen / byobu \u7ec8\u7aef\u590d\u7528\u5de5\u5177 fzf \u547d\u4ee4\u884c\u4e0b\u6a21\u7cca\u641c\u7d22\u5de5\u5177 ag grep / ack \u66f4\u9ad8\u6548\u7b80\u5355\u7684\u6587\u672c\u641c\u7d22\u5de5\u5177 tig git \u7ec8\u7aef\u4e0b\u4ea4\u4e92\u7ba1\u7406 git \u9879\u76ee z autojump / cd \u667a\u80fd\u6a21\u7cca\u641c\u7d22, \u8df3\u8f6c\u76ee\u5f55 dstat iostat, vmstat, ifstat \u4e09\u5408\u4e00 slurm \u7f51\u7edc\u6d41\u91cf\u76d1\u63a7 exa ls \u68c0\u7d22\u76ee\u5f55\u5de5\u5177 fd find \u67e5\u627e\u6587\u4ef6\u548c\u76ee\u5f55 bat cat \u5e26\u8bed\u6cd5\u9ad8\u4eae\u7684\u6587\u4ef6\u67e5\u770b ripgrep grep \u67e5\u627e\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u4e32 jq json \u683c\u5f0f\u5316\u5de5\u5177 glances htop / top \u7cfb\u7edf\u76d1\u63a7\u5de5\u5177 axel curl / wget \u4e0b\u8f7d\u5de5\u5177\uff0c\u591a\u7ebf\u7a0b aria2 wget \u4e0b\u8f7d\u5de5\u5177\uff0c\u652f\u6301 BT sz/rz \u4ea4\u4e92\u5f0f\u6587\u4ef6\u4f20\u8f93\uff0c\u4e0a\u4f20\u4e0b\u8f7d\u65b9\u4fbf ranger vim \u98ce\u683c\u6587\u4ef6\u7ba1\u7406\u5668 tldr man \u7f29\u77ed\u8bf4\u660e\u6587\u6863 rsync sftp / scp SSH \u534f\u8bae\u6587\u4ef6\u540c\u6b65 mtr traceroute \u7f51\u7edc\u67e5\u8be2\u5de5\u5177 multitail \u5b9e\u65f6\u76d1\u63a7\u591a\u4e2a\u65e5\u5fd7 ccze \u9ad8\u4eae\u663e\u793a\u65e5\u5fd7 mycli \u4ea4\u4e92\u5f0f\u7ba1\u7406 mysql mitmproxy \u547d\u4ee4\u884c\u6293\u5305\u5de5\u5177 httpie curl \u4ea4\u4e92\u5f0f\u7684 http \u5ba2\u6237\u7aef nnn du \u6587\u4ef6\u5206\u6790\u5de5\u5177 pydf df \u78c1\u76d8\u67e5\u8be2\u5de5\u5177 asciinema \u7ec8\u7aef\u5f55\u5c4f\u5de5\u5177 tpp reveal.js \u547d\u4ee4\u884c\u4e0b\u5199 PPT thefuck \u547d\u4ee4\u884c\u62fc\u5199\u66f4\u6b63","title":"Linux"},{"location":"env-linux/#linux","text":"\u63a8\u8350\u5de5\u5177 \u5176\u4ed6\u7c7b\u4f3c \u7b80\u4ecb neovim vim \u66f4\u73b0\u4ee3\u5316\u7684 vim zsh \u66f4\u597d\u7528\u7684 shell tmux screen / byobu \u7ec8\u7aef\u590d\u7528\u5de5\u5177 fzf \u547d\u4ee4\u884c\u4e0b\u6a21\u7cca\u641c\u7d22\u5de5\u5177 ag grep / ack \u66f4\u9ad8\u6548\u7b80\u5355\u7684\u6587\u672c\u641c\u7d22\u5de5\u5177 tig git \u7ec8\u7aef\u4e0b\u4ea4\u4e92\u7ba1\u7406 git \u9879\u76ee z autojump / cd \u667a\u80fd\u6a21\u7cca\u641c\u7d22, \u8df3\u8f6c\u76ee\u5f55 dstat iostat, vmstat, ifstat \u4e09\u5408\u4e00 slurm \u7f51\u7edc\u6d41\u91cf\u76d1\u63a7 exa ls \u68c0\u7d22\u76ee\u5f55\u5de5\u5177 fd find \u67e5\u627e\u6587\u4ef6\u548c\u76ee\u5f55 bat cat \u5e26\u8bed\u6cd5\u9ad8\u4eae\u7684\u6587\u4ef6\u67e5\u770b ripgrep grep \u67e5\u627e\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u4e32 jq json \u683c\u5f0f\u5316\u5de5\u5177 glances htop / top \u7cfb\u7edf\u76d1\u63a7\u5de5\u5177 axel curl / wget \u4e0b\u8f7d\u5de5\u5177\uff0c\u591a\u7ebf\u7a0b aria2 wget \u4e0b\u8f7d\u5de5\u5177\uff0c\u652f\u6301 BT sz/rz \u4ea4\u4e92\u5f0f\u6587\u4ef6\u4f20\u8f93\uff0c\u4e0a\u4f20\u4e0b\u8f7d\u65b9\u4fbf ranger vim \u98ce\u683c\u6587\u4ef6\u7ba1\u7406\u5668 tldr man \u7f29\u77ed\u8bf4\u660e\u6587\u6863 rsync sftp / scp SSH \u534f\u8bae\u6587\u4ef6\u540c\u6b65 mtr traceroute \u7f51\u7edc\u67e5\u8be2\u5de5\u5177 multitail \u5b9e\u65f6\u76d1\u63a7\u591a\u4e2a\u65e5\u5fd7 ccze \u9ad8\u4eae\u663e\u793a\u65e5\u5fd7 mycli \u4ea4\u4e92\u5f0f\u7ba1\u7406 mysql mitmproxy \u547d\u4ee4\u884c\u6293\u5305\u5de5\u5177 httpie curl \u4ea4\u4e92\u5f0f\u7684 http \u5ba2\u6237\u7aef nnn du \u6587\u4ef6\u5206\u6790\u5de5\u5177 pydf df \u78c1\u76d8\u67e5\u8be2\u5de5\u5177 asciinema \u7ec8\u7aef\u5f55\u5c4f\u5de5\u5177 tpp reveal.js \u547d\u4ee4\u884c\u4e0b\u5199 PPT thefuck \u547d\u4ee4\u884c\u62fc\u5199\u66f4\u6b63","title":"Linux \u7ec8\u7aef\u4e0b\u7684\u9ad8\u6548\u5de5\u5177"},{"location":"env-python/","text":"python env \u00b6 anaconda pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --trusted-host pypi.tuna.tsinghua.edu.cn <packagename> pip install -i http://pypi.douban.com/simple --trusted-host pypi.douban.com <packagename> pip install -i http://mirrors.aliyun.com/pypi/simple --trusted-host mirrors.aliyun.com/pypi/simple/ <packagename> \uff5e/.pip/pip.conf / C:\\Users\\xx\\pip\uff0c\u65b0\u5efa\u6587\u4ef6pip.ini [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host = pypi.tuna.tsinghua.edu.cn pip freeze > requirements.txt pip install -r requirements.txt # pip freeze\u8f93\u51fa\u7684\u662f\u672c\u5730\u73af\u5883\u4e2d\u6240\u6709\u4e09\u65b9\u5305\u4fe1\u606f\uff0c\u4f46\u662f\u4f1a\u6bd4pip list\u5c11\u51e0\u4e2a\u5305\uff0c\u56e0\u4e3apip\uff0cwheel\uff0csetuptools\u7b49\u5305\uff0c\u662f\u81ea\u5e26\u7684\u800c\u65e0\u6cd5(un)install\u7684\uff0c\u5982\u679c\u8981\u663e\u793a\u6240\u6709\u5305\u53ef\u4ee5\u52a0\u4e0a\u53c2\u6570-all\uff0c\u5373pip freeze -all pipreqs /home/project/location # Successfully saved requirements file in /home/project/location/requirements.txt virtualenv virtualenvwrapper # \u6709\u7684\u65f6\u5019virtualenv\u4e5f\u4f1a\u5e26\u6765\u4e00\u4e9b\u95ee\u9898\uff0c\u7531\u4e8evirtualenv\u7684\u542f\u52a8\u3001\u505c\u6b62\u811a\u672c\u90fd\u5728\u7279\u5b9a\u6587\u4ef6\u5939\uff0c\u53ef\u80fd\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u4f60\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u4e2a\u865a\u62df\u73af\u5883\u6563\u843d\u5728\u7cfb\u7edf\u5404\u5904\uff0c\u4f60\u53ef\u80fd\u5fd8\u8bb0\u5b83\u4eec\u7684\u540d\u5b57\u751a\u81f3\u5fd8\u8bb0\u5b83\u7684\u4f4d\u7f6e\u3002\u600e\u4e48\u6765\u7ba1\u7406virtualenv?\u9274\u4e8evirtualenv\u4e0d\u4fbf\u4e8e\u5bf9\u865a\u62df\u73af\u5883\u96c6\u4e2d\u7ba1\u7406\uff0c\u6240\u4ee5\u63a8\u8350\u76f4\u63a5\u4f7f\u7528virtualenvwrapper\u3002virtualenvwrapper\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u547d\u4ee4\u4f7f\u5f97\u548c\u865a\u62df\u73af\u5883\u5de5\u4f5c\u53d8\u5f97\u4fbf\u5229\u3002\u5b83\u628a\u4f60\u6240\u6709\u7684\u865a\u62df\u73af\u5883\u90fd\u653e\u5728\u4e00\u4e2a\u5730\u65b9\u3002 https://ningyu1.github.io/site/post/67-python-requirements/","title":"Python"},{"location":"env-python/#python-env","text":"anaconda pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --trusted-host pypi.tuna.tsinghua.edu.cn <packagename> pip install -i http://pypi.douban.com/simple --trusted-host pypi.douban.com <packagename> pip install -i http://mirrors.aliyun.com/pypi/simple --trusted-host mirrors.aliyun.com/pypi/simple/ <packagename> \uff5e/.pip/pip.conf / C:\\Users\\xx\\pip\uff0c\u65b0\u5efa\u6587\u4ef6pip.ini [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host = pypi.tuna.tsinghua.edu.cn pip freeze > requirements.txt pip install -r requirements.txt # pip freeze\u8f93\u51fa\u7684\u662f\u672c\u5730\u73af\u5883\u4e2d\u6240\u6709\u4e09\u65b9\u5305\u4fe1\u606f\uff0c\u4f46\u662f\u4f1a\u6bd4pip list\u5c11\u51e0\u4e2a\u5305\uff0c\u56e0\u4e3apip\uff0cwheel\uff0csetuptools\u7b49\u5305\uff0c\u662f\u81ea\u5e26\u7684\u800c\u65e0\u6cd5(un)install\u7684\uff0c\u5982\u679c\u8981\u663e\u793a\u6240\u6709\u5305\u53ef\u4ee5\u52a0\u4e0a\u53c2\u6570-all\uff0c\u5373pip freeze -all pipreqs /home/project/location # Successfully saved requirements file in /home/project/location/requirements.txt virtualenv virtualenvwrapper # \u6709\u7684\u65f6\u5019virtualenv\u4e5f\u4f1a\u5e26\u6765\u4e00\u4e9b\u95ee\u9898\uff0c\u7531\u4e8evirtualenv\u7684\u542f\u52a8\u3001\u505c\u6b62\u811a\u672c\u90fd\u5728\u7279\u5b9a\u6587\u4ef6\u5939\uff0c\u53ef\u80fd\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u4f60\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u4e2a\u865a\u62df\u73af\u5883\u6563\u843d\u5728\u7cfb\u7edf\u5404\u5904\uff0c\u4f60\u53ef\u80fd\u5fd8\u8bb0\u5b83\u4eec\u7684\u540d\u5b57\u751a\u81f3\u5fd8\u8bb0\u5b83\u7684\u4f4d\u7f6e\u3002\u600e\u4e48\u6765\u7ba1\u7406virtualenv?\u9274\u4e8evirtualenv\u4e0d\u4fbf\u4e8e\u5bf9\u865a\u62df\u73af\u5883\u96c6\u4e2d\u7ba1\u7406\uff0c\u6240\u4ee5\u63a8\u8350\u76f4\u63a5\u4f7f\u7528virtualenvwrapper\u3002virtualenvwrapper\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u547d\u4ee4\u4f7f\u5f97\u548c\u865a\u62df\u73af\u5883\u5de5\u4f5c\u53d8\u5f97\u4fbf\u5229\u3002\u5b83\u628a\u4f60\u6240\u6709\u7684\u865a\u62df\u73af\u5883\u90fd\u653e\u5728\u4e00\u4e2a\u5730\u65b9\u3002 https://ningyu1.github.io/site/post/67-python-requirements/","title":"python env"},{"location":"env-windows/","text":"","title":"Env windows"},{"location":"issue-linux-tips/","text":"\u641c\u7d22\u4ee3\u7801 \u00b6 # find find . -type f -iname \"*.java\" | xargs ag \"getUserBonusByBonusCode\" find . -type f -iname \"*.java\" -exec ag \"getUserBonusByBonusCode\" {} \\; # grep grep --include=\\*.java --exclude-dir={merchant,campaigns} -rnw '.' -e \"getUserBonusByBonusCode\" find . -maxdepth 1 | xargs -n 1 -d '\\n' du -sh find . -maxdepth 1 -print0 | xargs -0 du -sh find . -maxdepth 1 -exec du -sh {} \\; du -hd 1 find /{misc-service,misc-task,user-service,live-service,ypwh-wxmp-service,bsp-task,bsp-web,search-service} -type f -iname \"*.java\" -exec grep -l \"countGroupBy\" {} \\; grep --include-dir={misc-service,misc-task,user-service,live-service,ypwh-wxmp-service,bsp-task,bsp-web,search-service} --include=\\*.java -rnw '.' -e \"countGroupBy\"","title":"Issue linux tips"},{"location":"issue-linux-tips/#_1","text":"# find find . -type f -iname \"*.java\" | xargs ag \"getUserBonusByBonusCode\" find . -type f -iname \"*.java\" -exec ag \"getUserBonusByBonusCode\" {} \\; # grep grep --include=\\*.java --exclude-dir={merchant,campaigns} -rnw '.' -e \"getUserBonusByBonusCode\" find . -maxdepth 1 | xargs -n 1 -d '\\n' du -sh find . -maxdepth 1 -print0 | xargs -0 du -sh find . -maxdepth 1 -exec du -sh {} \\; du -hd 1 find /{misc-service,misc-task,user-service,live-service,ypwh-wxmp-service,bsp-task,bsp-web,search-service} -type f -iname \"*.java\" -exec grep -l \"countGroupBy\" {} \\; grep --include-dir={misc-service,misc-task,user-service,live-service,ypwh-wxmp-service,bsp-task,bsp-web,search-service} --include=\\*.java -rnw '.' -e \"countGroupBy\"","title":"\u641c\u7d22\u4ee3\u7801"},{"location":"ops-ansible/","text":"running ansible through ssh bastion host https://blog.scottlowe.org/2015/12/24/running-ansible-through-ssh-bastion-host/ https://blog.scottlowe.org/2015/12/11/using-ssh-multiplexing/ https://selivan.github.io/2018/01/29/ansible-ssh-bastion-host.html # \u5f3a\u5236\u5220\u9664 kubectl delete pods <pod> --grace-period=0 --force # \u8282\u70b9\u65e5\u5fd7 service kubelet status -l systemctl status -l kubelet.service journalctl -fu kubelet -o json-pretty journalctl -b -u nginx -o json-pretty # pod location /var/lib/kubelet/pods/* rpm -qa | egrep \"kube|docker|systemd\" | sort -n kubectl get pods --all-namespaces -o wide --field-selector spec.nodeName= ulimit -a cat /etc/security/limits.conf cat /proc/sys/fs/file-max cat /proc/sys/fs/file-nr netstat -x | grep '/var/run/docker.sock' | wc -l netstat -x | grep '/var/run/docker.sock' | head -3 sudo lsof -a -p $(pidof dockerd) | wc -l lsof | awk '{print $2}' | sort | uniq -c | sort -n ps -p <pid> \u58f0\u660e\u5f0f API \u00b6 \u5728Kubernetes\u4e2d\u6211\u4eec\u4f7f\u7528Deployment\u3001DamenSet\u3001StatefulSet\u6765\u7ba1\u7406\u5e94\u7528Workload\uff0c \u4f7f\u7528Service\u3001Ingress\u6765\u7ba1\u7406\u5e94\u7528\u7684\u8bbf\u95ee\u65b9\u5f0f\uff0c \u4f7f\u7528ConfigMap\u548cSecret\u6765\u7ba1\u7406\u5e94\u7528\u914d\u7f6e\u3002 \u6211\u4eec\u5728\u96c6\u7fa4\u4e2d\u5bf9\u8fd9\u4e9b\u8d44\u6e90\u7684\u521b\u5efa\uff0c\u66f4\u65b0\uff0c\u5220\u9664\u7684\u52a8\u4f5c\u90fd\u4f1a\u88ab\u8f6c\u6362\u4e3a\u4e8b\u4ef6(Event)\uff0c Kubernetes\u7684Controller Manager\u8d1f\u8d23\u76d1\u542c\u8fd9\u4e9b\u4e8b\u4ef6\u5e76\u89e6\u53d1\u76f8\u5e94\u7684\u4efb\u52a1\u6765\u6ee1\u8db3\u7528\u6237\u7684\u671f\u671b\u3002 \u8fd9\u79cd\u65b9\u5f0f\u6211\u4eec\u6210\u4e3a\u58f0\u660e\u5f0f\uff0c\u7528\u6237\u53ea\u9700\u8981\u5173\u5fc3\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u7ec8\u72b6\u6001\uff0c\u5176\u5b83\u7684\u90fd\u901a\u8fc7Kubernetes\u6765\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u5e94\u7528\u7684\u914d\u7f6e\u7ba1\u7406\u590d\u6742\u5ea6\u3002","title":"Ops ansible"},{"location":"ops-ansible/#api","text":"\u5728Kubernetes\u4e2d\u6211\u4eec\u4f7f\u7528Deployment\u3001DamenSet\u3001StatefulSet\u6765\u7ba1\u7406\u5e94\u7528Workload\uff0c \u4f7f\u7528Service\u3001Ingress\u6765\u7ba1\u7406\u5e94\u7528\u7684\u8bbf\u95ee\u65b9\u5f0f\uff0c \u4f7f\u7528ConfigMap\u548cSecret\u6765\u7ba1\u7406\u5e94\u7528\u914d\u7f6e\u3002 \u6211\u4eec\u5728\u96c6\u7fa4\u4e2d\u5bf9\u8fd9\u4e9b\u8d44\u6e90\u7684\u521b\u5efa\uff0c\u66f4\u65b0\uff0c\u5220\u9664\u7684\u52a8\u4f5c\u90fd\u4f1a\u88ab\u8f6c\u6362\u4e3a\u4e8b\u4ef6(Event)\uff0c Kubernetes\u7684Controller Manager\u8d1f\u8d23\u76d1\u542c\u8fd9\u4e9b\u4e8b\u4ef6\u5e76\u89e6\u53d1\u76f8\u5e94\u7684\u4efb\u52a1\u6765\u6ee1\u8db3\u7528\u6237\u7684\u671f\u671b\u3002 \u8fd9\u79cd\u65b9\u5f0f\u6211\u4eec\u6210\u4e3a\u58f0\u660e\u5f0f\uff0c\u7528\u6237\u53ea\u9700\u8981\u5173\u5fc3\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u7ec8\u72b6\u6001\uff0c\u5176\u5b83\u7684\u90fd\u901a\u8fc7Kubernetes\u6765\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u5e94\u7528\u7684\u914d\u7f6e\u7ba1\u7406\u590d\u6742\u5ea6\u3002","title":"\u58f0\u660e\u5f0f API"},{"location":"ops-docker-alpine/","text":"\u57fa\u4e8e alpine \u7684\u5bb9\u5668\u5e38\u7528\u624b\u6bb5 \u00b6 \u5728 Dockerfile \u4e2d \u00b6 RUN echo -e \"https://mirrors.ustc.edu.cn/alpine/latest-stable/main\\nhttps://mirrors.ustc.edu.cn/alpine/latest-stable/community\" > /etc/apk/repositories && \\ apk update # \u8bbe\u7f6e\u65f6\u533a RUN apk add --no-cache tzdata ENV TZ=Asia/Shanghai \u5728\u5bb9\u5668\u8fd0\u884c\u65f6 \u00b6 apk add curl apk search htop # How do I list installed packages? apk info apk info -vv | grep 'foo' apk info -vv | sort # Check if PACKAGE is installed apk -e info pkgName # https://www.cyberciti.biz/faq/10-alpine-linux-apk-command-examples/ apk add -u busybox && apk add busybox-extras apk add bind-tools apk add tcpdump # debug dubbo dubbo qos http://dubbo.apache.org/zh-cn/docs/user/references/qos.html apk command options and examples \u00b6 Command Usage Example apk update Update the package list apk update apk upgrade Upgrade the system apk update apt ugrade apk add pkg Add a package apk add apache apk del pkg Delete a package apk del nginx apk search -v Search for packages apk search -v apk search -v -d \u2018nginx \u2019 apk search -v \u2018apache \u2019 apk info List all installed pacakges apk info apk fix Repair package or upgrade it without modifying main dependencies apk fix apk policy pkg Show repository policy for packages apk policy bash apk stats Show statistics about repositories and installations apk stats","title":"\u955c\u50cf\u6784\u5efa"},{"location":"ops-docker-alpine/#alpine","text":"","title":"\u57fa\u4e8e alpine \u7684\u5bb9\u5668\u5e38\u7528\u624b\u6bb5"},{"location":"ops-docker-alpine/#dockerfile","text":"RUN echo -e \"https://mirrors.ustc.edu.cn/alpine/latest-stable/main\\nhttps://mirrors.ustc.edu.cn/alpine/latest-stable/community\" > /etc/apk/repositories && \\ apk update # \u8bbe\u7f6e\u65f6\u533a RUN apk add --no-cache tzdata ENV TZ=Asia/Shanghai","title":"\u5728 Dockerfile \u4e2d"},{"location":"ops-docker-alpine/#_1","text":"apk add curl apk search htop # How do I list installed packages? apk info apk info -vv | grep 'foo' apk info -vv | sort # Check if PACKAGE is installed apk -e info pkgName # https://www.cyberciti.biz/faq/10-alpine-linux-apk-command-examples/ apk add -u busybox && apk add busybox-extras apk add bind-tools apk add tcpdump # debug dubbo dubbo qos http://dubbo.apache.org/zh-cn/docs/user/references/qos.html","title":"\u5728\u5bb9\u5668\u8fd0\u884c\u65f6"},{"location":"ops-docker-alpine/#apk-command-options-and-examples","text":"Command Usage Example apk update Update the package list apk update apk upgrade Upgrade the system apk update apt ugrade apk add pkg Add a package apk add apache apk del pkg Delete a package apk del nginx apk search -v Search for packages apk search -v apk search -v -d \u2018nginx \u2019 apk search -v \u2018apache \u2019 apk info List all installed pacakges apk info apk fix Repair package or upgrade it without modifying main dependencies apk fix apk policy pkg Show repository policy for packages apk policy bash apk stats Show statistics about repositories and installations apk stats","title":"apk command options and examples"},{"location":"ops-docker/","text":"Docker \u00b6 # rabbitmq \u5355\u5b9e\u4f8b docker run -d --name rabbitmq -e RABBITMQ_USERNAME=user -e RABBITMQ_PASSWORD=pass -p 4369:4369 -p 5672:5672 -p 25672:25672 -p 15672:15672 bitnami/rabbitmq:3.8.3 # redis \u5355\u5b9e\u4f8b docker run -d --name redis -e ALLOW_EMPTY_PASSWORD=yes -p 6379:6379 bitnami/redis:5.0.8 /opt/bitnami/scripts/redis/run.sh --maxmemory 512mb # zookeeper solo docker run -d --name zookeeper -v ~/docker-data/zookeeper:/bitnami/zookeeper -v ~/docker-config/zookeeper/zoo.cfg:/opt/bitnami/zookeeper/conf/zoo.cfg -e ALLOW_ANONYMOUS_LOGIN=yes -p 2181:2181 bitnami/zookeeper:3.6.0 docker run -d --name zookeeper -v /opt/docker-data/zookeeper/data:/bitnami/zookeeper -v /opt/docker-data/zookeeper/conf/zoo.cfg:/opt/bitnami/zookeeper/conf/zoo.cfg -e ALLOW_ANONYMOUS_LOGIN=yes -p 2181:2181 bitnami/zookeeper:3.6.0 docker run -it --rm \\ bitnami/zookeeper:3.6.0 zkCli.sh -server zookeeper:2181 get / # skywalking docker pull apache/skywalking-base:7.0.0-es7 docker pull apache/skywalking-ui:7.0.0 docker pull apache/skywalking-oap-server:7.0.0-es7 docker run --name oap --restart always -d -e SW_OAP_ADDRESS=oap:12800 apache/skywalking-ui:7.0.0 docker run --name oap --restart always -d -e SW_STORAGE=elasticsearch -e SW_STORAGE_ES_CLUSTER_NODES=elasticsearch:9200 apache/skywalking-oap-server:7.0.0-es7 docker run \\ -v ~/docker-data/elasticsearch:/bitnami/elasticsearch/data \\ bitnami/elasticsearch:7.6.2","title":"docker"},{"location":"ops-docker/#docker","text":"# rabbitmq \u5355\u5b9e\u4f8b docker run -d --name rabbitmq -e RABBITMQ_USERNAME=user -e RABBITMQ_PASSWORD=pass -p 4369:4369 -p 5672:5672 -p 25672:25672 -p 15672:15672 bitnami/rabbitmq:3.8.3 # redis \u5355\u5b9e\u4f8b docker run -d --name redis -e ALLOW_EMPTY_PASSWORD=yes -p 6379:6379 bitnami/redis:5.0.8 /opt/bitnami/scripts/redis/run.sh --maxmemory 512mb # zookeeper solo docker run -d --name zookeeper -v ~/docker-data/zookeeper:/bitnami/zookeeper -v ~/docker-config/zookeeper/zoo.cfg:/opt/bitnami/zookeeper/conf/zoo.cfg -e ALLOW_ANONYMOUS_LOGIN=yes -p 2181:2181 bitnami/zookeeper:3.6.0 docker run -d --name zookeeper -v /opt/docker-data/zookeeper/data:/bitnami/zookeeper -v /opt/docker-data/zookeeper/conf/zoo.cfg:/opt/bitnami/zookeeper/conf/zoo.cfg -e ALLOW_ANONYMOUS_LOGIN=yes -p 2181:2181 bitnami/zookeeper:3.6.0 docker run -it --rm \\ bitnami/zookeeper:3.6.0 zkCli.sh -server zookeeper:2181 get / # skywalking docker pull apache/skywalking-base:7.0.0-es7 docker pull apache/skywalking-ui:7.0.0 docker pull apache/skywalking-oap-server:7.0.0-es7 docker run --name oap --restart always -d -e SW_OAP_ADDRESS=oap:12800 apache/skywalking-ui:7.0.0 docker run --name oap --restart always -d -e SW_STORAGE=elasticsearch -e SW_STORAGE_ES_CLUSTER_NODES=elasticsearch:9200 apache/skywalking-oap-server:7.0.0-es7 docker run \\ -v ~/docker-data/elasticsearch:/bitnami/elasticsearch/data \\ bitnami/elasticsearch:7.6.2","title":"Docker"},{"location":"ops-dubbo/","text":"monitor \u00b6 \u901a\u8fc7 dubbo filter \u548c micrometer \u5b9e\u73b0 prometheaus \u683c\u5f0f\u7684\u76d1\u63a7\u8f93\u51fa \u00b6 \u4ee3\u7801\uff1a https://github.com/linux-china/spring-boot-apache-dubbo/tree/master/spring-boot-starter-apache-dubbo/src/main/java/org/mvnsearch/spring/boot/dubbo/listener \u6765\u6e90\uff1ahttps://github.com/apache/dubbo/issues/483#issuecomment-409039233 alibaba metrcis \u5b9e\u73b0\u4e86 prometheaus \u683c\u5f0f\u7684\u8f93\u51fa \u00b6 \u4ee3\u7801\uff1ahttps://github.com/alibaba/metrics/tree/master/metrics-prometheus \u6765\u6e90\uff1ahttps://github.com/alibaba/metrics/issues/28#issuecomment-530675211 dubbo admin \u4e2d\u901a\u8fc7\u6ce8\u518c\u4e2d\u5fc3\u6536\u96c6\u76d1\u63a7\u4fe1\u606f \u00b6 \u4ee3\u7801\uff1ahttps://github.com/apache/dubbo-admin/blob/develop/dubbo-admin-server/src/main/java/org/apache/dubbo/admin/service/impl/MetrcisCollectServiceImpl.java alibaba metrics \u673a\u5236\u89e3\u8bfb \u00b6 \u6587\u7ae0 https://developer.aliyun.com/article/693569","title":"Ops dubbo"},{"location":"ops-dubbo/#monitor","text":"","title":"monitor"},{"location":"ops-dubbo/#dubbo-filter-micrometer-prometheaus","text":"\u4ee3\u7801\uff1a https://github.com/linux-china/spring-boot-apache-dubbo/tree/master/spring-boot-starter-apache-dubbo/src/main/java/org/mvnsearch/spring/boot/dubbo/listener \u6765\u6e90\uff1ahttps://github.com/apache/dubbo/issues/483#issuecomment-409039233","title":"\u901a\u8fc7 dubbo filter \u548c micrometer \u5b9e\u73b0 prometheaus \u683c\u5f0f\u7684\u76d1\u63a7\u8f93\u51fa"},{"location":"ops-dubbo/#alibaba-metrcis-prometheaus","text":"\u4ee3\u7801\uff1ahttps://github.com/alibaba/metrics/tree/master/metrics-prometheus \u6765\u6e90\uff1ahttps://github.com/alibaba/metrics/issues/28#issuecomment-530675211","title":"alibaba metrcis \u5b9e\u73b0\u4e86 prometheaus \u683c\u5f0f\u7684\u8f93\u51fa"},{"location":"ops-dubbo/#dubbo-admin","text":"\u4ee3\u7801\uff1ahttps://github.com/apache/dubbo-admin/blob/develop/dubbo-admin-server/src/main/java/org/apache/dubbo/admin/service/impl/MetrcisCollectServiceImpl.java","title":"dubbo admin \u4e2d\u901a\u8fc7\u6ce8\u518c\u4e2d\u5fc3\u6536\u96c6\u76d1\u63a7\u4fe1\u606f"},{"location":"ops-dubbo/#alibaba-metrics","text":"\u6587\u7ae0 https://developer.aliyun.com/article/693569","title":"alibaba metrics \u673a\u5236\u89e3\u8bfb"},{"location":"ops-jenkins/","text":"jenkins \u7b14\u8bb0 \u00b6 \u5e38\u7528\u63d2\u4ef6 \u00b6 Pipeline Utility Steps Email Extension Template Plugin Git Parameter Plug-In Generic Webhook Trigger Kubernetes CLI Plugin Role-based Authorization Strategy SCM Sync Configuration Plugin Ansible plugin \u4f7f\u7528 docker \u7248 jenkins \u00b6 \u5f53Jenkins\u8fd0\u884c\u5728\u5bb9\u5668\u4e2d\u65f6\uff0c\u56e0\u4e3aJenkins\u8981\u6267\u884c\u5f88\u591aDocker\u547d\u4ee4\uff0c\u6bd4\u5982build\u955c\u50cf\u3001push\u955c\u50cf\u7b49\uff0c\u8fd9\u5c31\u8981\u9762\u4e34\u4e00\u4e2a\u95ee\u9898\u2014\u2014\u5982\u4f55\u5728\u5bb9\u5668\u5316\u7684Jenkins\u4e2d\u8fd0\u884cDocker\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u5efa\u8bae\u5927\u5bb6\u4f7f\u7528\u5bb9\u5668\u8fd0\u884c\u6240\u5728\u5bbf\u4e3b\u673a\u7684Docker\u73af\u5883\uff0c\u800c\u4e0d\u662f\u518d\u5728\u5bb9\u5668\u5185\u542f\u52a8\u4e00\u5957 \u5fc5\u5907\u65b9\u6848 \u00b6 jenkins \u56fd\u5185\u52a0\u901f # \u8fdb\u5165\u66f4\u65b0\u914d\u7f6e\u4f4d\u7f6e cd {/var/lib/jenkins}/updates # \u65b9\u6848 1 : \u901a\u8fc7 vim \u66ff\u6362\u5730\u5740 \u4f7f\u7528vim\u7684\u547d\u4ee4\uff0c\u5982\u4e0b\uff0c\u66ff\u6362\u6240\u6709\u63d2\u4ef6\u4e0b\u8f7d\u7684url :1,$s/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g # \u65b9\u6848 2 : \u901a\u8fc7 sed \u66ff\u6362\u5730\u5740 sed -i 's/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g' default.json sed -i 's/http:\\/\\/www.google.com/https:\\/\\/www.baidu.com/g' default.json FAQ \u00b6 \u5728\u54ea\u53ef\u4ee5\u627e\u5230\u5b98\u65b9\u5b89\u88c5\u5305 https://updates.jenkins-ci.org/download/plugins/","title":"\u8fd0\u7ef4 - jenkins"},{"location":"ops-jenkins/#jenkins","text":"","title":"jenkins \u7b14\u8bb0"},{"location":"ops-jenkins/#_1","text":"Pipeline Utility Steps Email Extension Template Plugin Git Parameter Plug-In Generic Webhook Trigger Kubernetes CLI Plugin Role-based Authorization Strategy SCM Sync Configuration Plugin Ansible plugin","title":"\u5e38\u7528\u63d2\u4ef6"},{"location":"ops-jenkins/#docker-jenkins","text":"\u5f53Jenkins\u8fd0\u884c\u5728\u5bb9\u5668\u4e2d\u65f6\uff0c\u56e0\u4e3aJenkins\u8981\u6267\u884c\u5f88\u591aDocker\u547d\u4ee4\uff0c\u6bd4\u5982build\u955c\u50cf\u3001push\u955c\u50cf\u7b49\uff0c\u8fd9\u5c31\u8981\u9762\u4e34\u4e00\u4e2a\u95ee\u9898\u2014\u2014\u5982\u4f55\u5728\u5bb9\u5668\u5316\u7684Jenkins\u4e2d\u8fd0\u884cDocker\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u5efa\u8bae\u5927\u5bb6\u4f7f\u7528\u5bb9\u5668\u8fd0\u884c\u6240\u5728\u5bbf\u4e3b\u673a\u7684Docker\u73af\u5883\uff0c\u800c\u4e0d\u662f\u518d\u5728\u5bb9\u5668\u5185\u542f\u52a8\u4e00\u5957","title":"\u4f7f\u7528 docker \u7248 jenkins"},{"location":"ops-jenkins/#_2","text":"jenkins \u56fd\u5185\u52a0\u901f # \u8fdb\u5165\u66f4\u65b0\u914d\u7f6e\u4f4d\u7f6e cd {/var/lib/jenkins}/updates # \u65b9\u6848 1 : \u901a\u8fc7 vim \u66ff\u6362\u5730\u5740 \u4f7f\u7528vim\u7684\u547d\u4ee4\uff0c\u5982\u4e0b\uff0c\u66ff\u6362\u6240\u6709\u63d2\u4ef6\u4e0b\u8f7d\u7684url :1,$s/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g # \u65b9\u6848 2 : \u901a\u8fc7 sed \u66ff\u6362\u5730\u5740 sed -i 's/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g' default.json sed -i 's/http:\\/\\/www.google.com/https:\\/\\/www.baidu.com/g' default.json","title":"\u5fc5\u5907\u65b9\u6848"},{"location":"ops-jenkins/#faq","text":"\u5728\u54ea\u53ef\u4ee5\u627e\u5230\u5b98\u65b9\u5b89\u88c5\u5305 https://updates.jenkins-ci.org/download/plugins/","title":"FAQ"},{"location":"ops-kafka/","text":"# \u5e73\u8861 leader bin/kafka-preferred-replica-election.sh --bootstrap-server localhost:9092 # \u538b\u6d4b\u5de5\u5177 bin/kafka-producer-perf-test.sh --topic test --num-records 100 --record-size 1 --throughput 100 --producer-props bootstrap.servers=localhost:9092 # \u542f\u52a8 bin/kafka-server-start.sh -daemon config/server.properties JMX_PORT=9991 bin/kafka-server-start.sh -daemon config/server.properties # \u505c\u6b62 bin/kafka-server-stop.sh # \u751f\u4ea7 bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test # \u6d88\u8d39 bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginning bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --offset latest --partition 0 bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --offset latest --partition 0 --max-messages 1 # \u5206\u7ec4\u6d88\u8d39 bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test -group test_group --from-beginning bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group test_group --describe bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group test_group --topic test --delete bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group test_group --delete # \u521b\u5efa Topic bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test # \u5982\u679c\u914d\u7f6e\u6587\u4ef6 server.properties \u6307\u5b9a\u4e86 Kafka \u5728 zookeeper \u4e0a\u7684\u76ee\u5f55\uff0c\u5219\u53c2\u6570\u4e5f\u8981\u6307\u5b9a\uff0c\u5426\u5219\u4f1a\u62a5\u65e0\u53ef\u7528\u7684 brokers bin/kafka-topics.sh --create --zookeeper localhost:2181/kafka --replication-factor 1 --partitions 1 --topic test # \u5220\u9664 Topic bin/kafka-topics.sh --zookeeper localhost:2181 --topic test --delete bin/kafka-topics.sh --list --zookeeper localhost:2181 bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic test # \u589e\u52a0 Topic \u7684 partition \u6570 bin/kafka-topics.sh --zookeeper localhost:2181 --alter --topic test --partitions 5 # \u67e5\u770b topic \u6307\u5b9a\u5206\u533a offset \u7684\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c time \u4e3a -1 \u65f6\u8868\u793a\u6700\u5927\u503c\uff0c\u4e3a -2 \u65f6\u8868\u793a\u6700\u5c0f\u503c\uff1a bin/kafka-run-class.sh kafka.tools.GetOffsetShell --topic test --time -1 --broker-list localhost:9092 --partitions 0","title":"\u8fd0\u7ef4 - kafka"},{"location":"ops-kubernetes/","text":"","title":"Ops kubernetes"},{"location":"ops-mongodb/","text":"\u5b58\u50a8\u5f15\u64ce\u66f4\u6362 \u00b6 Starting in version 4.0, MongoDB deprecates the MMAPv1 storage Engine and will remove MMAPv1 in a future release.","title":"Ops mongodb"},{"location":"ops-mongodb/#_1","text":"Starting in version 4.0, MongoDB deprecates the MMAPv1 storage Engine and will remove MMAPv1 in a future release.","title":"\u5b58\u50a8\u5f15\u64ce\u66f4\u6362"},{"location":"ops-oss/","text":"OSS \u5bf9\u8c61\u5b58\u50a8 \u00b6 \u4e03\u725b \u00b6 # \u767b\u5f55, \u4f1a\u8bdd\u7684\u6709\u6548\u671f\u662f 3600 \u79d2\uff08\u4e00\u4e2a\u5c0f\u65f6\uff09\uff0c\u4e00\u4e2a\u5c0f\u65f6\u540e\u9700\u8981\u91cd\u65b0\u767b\u5f55\u3002 qrsctl login <User> <Passwd> # \u67e5\u770b\u5e10\u53f7\u4fe1\u606f qrsctl info # \u67e5\u770b\u5bc6\u94a5(AccessKey/SecretKey), \u7f51\u7ad9\u4e0a\u9ed8\u8ba4\u4f7f\u7528\u7684\u5e94\u7528\u540d\u79f0\u662f\uff1adefault qrsctl appinfo <AppName> # \u521b\u5efa\u7a7a\u95f4(Bucket) qrsctl mkbucket2 <Bucket> # \u5c06\u7a7a\u95f4\u8bbe\u7f6e\u4e3a\u516c\u5f00 qrsctl private <Bucket> 0 # \u5c06\u7a7a\u95f4\u8bbe\u7f6e\u4e3a\u79c1\u6709 qrsctl private <Bucket> 1 # \u5217\u51fa\u6240\u6709\u7a7a\u95f4(Buckets) qrsctl buckets # \u67e5\u770b\u6307\u5b9a\u7a7a\u95f4(Bucket)\u4fe1\u606f qrsctl bucketinfo <Bucket> # \u7a7a\u95f4\u6388\u6743 qrsctl share <Bucket> <Uid> <Permission> # \u8bbe\u7f6e\u955c\u50cf\u5b58\u50a8\uff08\u6e90\u7ad9\u52a0\u901f\uff09 qrsctl img <Bucket> <SrcUrl>[,<SrcUrl2>,...] [SrcHost] # \u53d6\u6d88\u955c\u50cf\u5b58\u50a8 qrsctl unimg <Bucket> # \u8bbe\u7f6e\u955c\u50cf\u5b58\u50a8\u56de\u6e90\u5bb9\u9519\u5c5e\u6027 qrsctl imgsft <Bucket> <imgsft> # \u6e05\u9664cdn\u7f13\u5b58, \u6700\u591a\u6307\u5b9a10\u4e2a Url qrsctl cdn/refresh <Url1> <Url2>...<UrlN> # \u8bbe\u7f6eAPI\u89c4\u683c\u522b\u540d qrsctl style <Bucket> <aliasName> <fop> # \u53d6\u6d88API\u89c4\u683c\u522b\u540d qrsctl unstyle <Bucket> <Name> # \u8bbe\u7f6e\u53cb\u597dURL\u5206\u9694\u7b26 qrsctl separator <Bucket> <Sep> # \u8bbe\u7f6e\u539f\u6587\u4ef6/\u56fe\u4fdd\u62a4 qrsctl protected <Bucket> <Protected> # \u4e0a\u4f20\u6587\u4ef6 qrsctl put <Bucket> <Key> <SrcFile> # \u4e0a\u4f20\u4e00\u4e2a\u5927\u6587\u4ef6\uff08\u8d85\u8fc7 4MB\uff09\uff0c\u52a0\u4e0a\u9009\u9879 c\u3000\u4f1a\u542f\u7528\u5207\u7247\u5e76\u884c\u4e0a\u4f20\u4e00\u4e2a\u5927\u6587\u4ef6\u3002\uff08\u8d85\u8fc7 4MB\uff09 qrsctl put -c <Bucket> <Key> <SrcFile> # \u4e0b\u8f7d\u6587\u4ef6 qrsctl get <Bucket> <Key> <DestFile> # \u67e5\u770b\u6587\u4ef6 qrsctl stat <Bucket> <Key> # \u590d\u5236\u6587\u4ef6\uff0c\u5c06 Bucket1 \u4e2d\u7684 KeySrc \u590d\u5236\u5230 Bucket2 \u5e76\u547d\u540d\u4e3a KeyDest, Bucket1 \u548c Bucket2 \u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u3002 qrsctl cp <Bucket1:KeySrc> <Bucket2:KeyDest> # \u79fb\u52a8\u6587\u4ef6\uff0c\u5c06 Bucket1 \u4e2d\u7684 KeyOld \u79fb\u52a8\u5230 Bucket2 \u5e76\u547d\u540d\u4e3a KeyNew, Bucket1 \u548c Bucket2 \u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u3002 qrsctl mv <Bucket1:KeyOld> <Bucket2:KeyNew> # \u5220\u9664\u6587\u4ef6 qrsctl del <Bucket> <Key> # \u5982\u6267\u884c\u8fc7\u7a0b\u4e2d\u65e0\u9519\u8bef\uff0c\u5219\u4f1a\u5728\u5c4f\u5e55\u4e0a\u8f93\u51faOK\u5b57\u6837\u3002 qrsctl command [arguments] && echo \"OK\"","title":"OSS \u5bf9\u8c61\u5b58\u50a8"},{"location":"ops-oss/#oss","text":"","title":"OSS \u5bf9\u8c61\u5b58\u50a8"},{"location":"ops-oss/#_1","text":"# \u767b\u5f55, \u4f1a\u8bdd\u7684\u6709\u6548\u671f\u662f 3600 \u79d2\uff08\u4e00\u4e2a\u5c0f\u65f6\uff09\uff0c\u4e00\u4e2a\u5c0f\u65f6\u540e\u9700\u8981\u91cd\u65b0\u767b\u5f55\u3002 qrsctl login <User> <Passwd> # \u67e5\u770b\u5e10\u53f7\u4fe1\u606f qrsctl info # \u67e5\u770b\u5bc6\u94a5(AccessKey/SecretKey), \u7f51\u7ad9\u4e0a\u9ed8\u8ba4\u4f7f\u7528\u7684\u5e94\u7528\u540d\u79f0\u662f\uff1adefault qrsctl appinfo <AppName> # \u521b\u5efa\u7a7a\u95f4(Bucket) qrsctl mkbucket2 <Bucket> # \u5c06\u7a7a\u95f4\u8bbe\u7f6e\u4e3a\u516c\u5f00 qrsctl private <Bucket> 0 # \u5c06\u7a7a\u95f4\u8bbe\u7f6e\u4e3a\u79c1\u6709 qrsctl private <Bucket> 1 # \u5217\u51fa\u6240\u6709\u7a7a\u95f4(Buckets) qrsctl buckets # \u67e5\u770b\u6307\u5b9a\u7a7a\u95f4(Bucket)\u4fe1\u606f qrsctl bucketinfo <Bucket> # \u7a7a\u95f4\u6388\u6743 qrsctl share <Bucket> <Uid> <Permission> # \u8bbe\u7f6e\u955c\u50cf\u5b58\u50a8\uff08\u6e90\u7ad9\u52a0\u901f\uff09 qrsctl img <Bucket> <SrcUrl>[,<SrcUrl2>,...] [SrcHost] # \u53d6\u6d88\u955c\u50cf\u5b58\u50a8 qrsctl unimg <Bucket> # \u8bbe\u7f6e\u955c\u50cf\u5b58\u50a8\u56de\u6e90\u5bb9\u9519\u5c5e\u6027 qrsctl imgsft <Bucket> <imgsft> # \u6e05\u9664cdn\u7f13\u5b58, \u6700\u591a\u6307\u5b9a10\u4e2a Url qrsctl cdn/refresh <Url1> <Url2>...<UrlN> # \u8bbe\u7f6eAPI\u89c4\u683c\u522b\u540d qrsctl style <Bucket> <aliasName> <fop> # \u53d6\u6d88API\u89c4\u683c\u522b\u540d qrsctl unstyle <Bucket> <Name> # \u8bbe\u7f6e\u53cb\u597dURL\u5206\u9694\u7b26 qrsctl separator <Bucket> <Sep> # \u8bbe\u7f6e\u539f\u6587\u4ef6/\u56fe\u4fdd\u62a4 qrsctl protected <Bucket> <Protected> # \u4e0a\u4f20\u6587\u4ef6 qrsctl put <Bucket> <Key> <SrcFile> # \u4e0a\u4f20\u4e00\u4e2a\u5927\u6587\u4ef6\uff08\u8d85\u8fc7 4MB\uff09\uff0c\u52a0\u4e0a\u9009\u9879 c\u3000\u4f1a\u542f\u7528\u5207\u7247\u5e76\u884c\u4e0a\u4f20\u4e00\u4e2a\u5927\u6587\u4ef6\u3002\uff08\u8d85\u8fc7 4MB\uff09 qrsctl put -c <Bucket> <Key> <SrcFile> # \u4e0b\u8f7d\u6587\u4ef6 qrsctl get <Bucket> <Key> <DestFile> # \u67e5\u770b\u6587\u4ef6 qrsctl stat <Bucket> <Key> # \u590d\u5236\u6587\u4ef6\uff0c\u5c06 Bucket1 \u4e2d\u7684 KeySrc \u590d\u5236\u5230 Bucket2 \u5e76\u547d\u540d\u4e3a KeyDest, Bucket1 \u548c Bucket2 \u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u3002 qrsctl cp <Bucket1:KeySrc> <Bucket2:KeyDest> # \u79fb\u52a8\u6587\u4ef6\uff0c\u5c06 Bucket1 \u4e2d\u7684 KeyOld \u79fb\u52a8\u5230 Bucket2 \u5e76\u547d\u540d\u4e3a KeyNew, Bucket1 \u548c Bucket2 \u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u3002 qrsctl mv <Bucket1:KeyOld> <Bucket2:KeyNew> # \u5220\u9664\u6587\u4ef6 qrsctl del <Bucket> <Key> # \u5982\u6267\u884c\u8fc7\u7a0b\u4e2d\u65e0\u9519\u8bef\uff0c\u5219\u4f1a\u5728\u5c4f\u5e55\u4e0a\u8f93\u51faOK\u5b57\u6837\u3002 qrsctl command [arguments] && echo \"OK\"","title":"\u4e03\u725b"},{"location":"ops-rabbitmq/","text":"\u521b\u5efa\u7528\u6237 \u521b\u5efa vhost vhost \u6388\u6743\u7528\u6237\uff0c\u70b9\u51fb vhost -set permission 7 \u79cd\u961f\u5217 \u00b6 https://www.rabbitmq.com/getstarted.html simple queue 1 \u5bf9 1 work queue \u8f6e\u8be2\u5206\u53d1 \u516c\u5e73\u5206\u53d1\uff08\u80fd\u8005\u591a\u52b3\uff09 \u200b qos=1\u3001\u624b\u52a8 ackg channel exchange queue docker deploy \u65b0\u5efa\u7528\u6237\u4e86\u4e00\u5b9a\u8981\u7ed9\u8fd9\u4e2a\u7528\u6237\u8bbe\u7f6evhost\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u521a\u5f00\u59cb\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u5bfc\u81f4\u4e00\u76f4\u51fa\u73b0Connection Refuse\u8fd9\u6837\u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u7528\u547d\u4ee4\u884c\u4e5f\u53ef\u4ee5\u7528\u90a3\u4e2a\u7ba1\u7406\u754c\u9762\uff0c\u63a8\u8350\u7528\u547d\u4ee4\u884c\u3002 \u4f7f\u7528\u5bf9\u8c61\u4f20\u8f93\u7684\u65f6\u5019\u5bf9\u8c61\u4e00\u5b9a\u8981\u5b9e\u73b0Serializable\u63a5\u53e3\uff0c\u5426\u5219\u4e0d\u80fd\u4f20\u8f93 \u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u961f\u5217\u4e2d\u51fa\u73b0\u4e86\u4e0d\u80fd\u5904\u7406\u7684\u6d88\u606f\uff0c\u6574\u4e2avhost\u5c31\u7528\u4e0d\u4e86\u4e86\uff0c\u6240\u4ee5\u5efa\u8bae\u628a\u4e0d\u540c\u7684queue\u548cexchange\u653e\u5728\u4e0d\u540c\u7684vhost\u4e0b\u9762\uff0c\u4fdd\u8bc1\u4e92\u4e0d\u5e72\u6270\u3002\uff08\u6211\u5c31\u662f\u597d\u5947\u4e00\u4e0b\uff0c\u628aUser\u7684\u90a3\u4e2aSerializable\u7ed9\u53bb\u6389\u4e86\uff0c\u7136\u540e\u5c31\u4e00\u76f4\u62a5\u9519\uff0c\u540e\u6765\u53d1\u73b0\u662fqueue\u4e0d\u80fd\u5904\u7406\u672a\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u5bfc\u81f4listener\u5931\u6548\u5bfc\u81f4\u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5bfc\u81f4\u4e00\u4e2avhost\u4e0b\u7684\u6240\u6709queue\u90fd\u4e0d\u80fd\u7528\u4e86\uff0c\u5c34\u5c2c\uff09\u3002","title":"rabbitmq"},{"location":"ops-rabbitmq/#7","text":"https://www.rabbitmq.com/getstarted.html simple queue 1 \u5bf9 1 work queue \u8f6e\u8be2\u5206\u53d1 \u516c\u5e73\u5206\u53d1\uff08\u80fd\u8005\u591a\u52b3\uff09 \u200b qos=1\u3001\u624b\u52a8 ackg channel exchange queue docker deploy \u65b0\u5efa\u7528\u6237\u4e86\u4e00\u5b9a\u8981\u7ed9\u8fd9\u4e2a\u7528\u6237\u8bbe\u7f6evhost\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u521a\u5f00\u59cb\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\u5bfc\u81f4\u4e00\u76f4\u51fa\u73b0Connection Refuse\u8fd9\u6837\u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u7528\u547d\u4ee4\u884c\u4e5f\u53ef\u4ee5\u7528\u90a3\u4e2a\u7ba1\u7406\u754c\u9762\uff0c\u63a8\u8350\u7528\u547d\u4ee4\u884c\u3002 \u4f7f\u7528\u5bf9\u8c61\u4f20\u8f93\u7684\u65f6\u5019\u5bf9\u8c61\u4e00\u5b9a\u8981\u5b9e\u73b0Serializable\u63a5\u53e3\uff0c\u5426\u5219\u4e0d\u80fd\u4f20\u8f93 \u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u961f\u5217\u4e2d\u51fa\u73b0\u4e86\u4e0d\u80fd\u5904\u7406\u7684\u6d88\u606f\uff0c\u6574\u4e2avhost\u5c31\u7528\u4e0d\u4e86\u4e86\uff0c\u6240\u4ee5\u5efa\u8bae\u628a\u4e0d\u540c\u7684queue\u548cexchange\u653e\u5728\u4e0d\u540c\u7684vhost\u4e0b\u9762\uff0c\u4fdd\u8bc1\u4e92\u4e0d\u5e72\u6270\u3002\uff08\u6211\u5c31\u662f\u597d\u5947\u4e00\u4e0b\uff0c\u628aUser\u7684\u90a3\u4e2aSerializable\u7ed9\u53bb\u6389\u4e86\uff0c\u7136\u540e\u5c31\u4e00\u76f4\u62a5\u9519\uff0c\u540e\u6765\u53d1\u73b0\u662fqueue\u4e0d\u80fd\u5904\u7406\u672a\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u5bfc\u81f4listener\u5931\u6548\u5bfc\u81f4\u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5bfc\u81f4\u4e00\u4e2avhost\u4e0b\u7684\u6240\u6709queue\u90fd\u4e0d\u80fd\u7528\u4e86\uff0c\u5c34\u5c2c\uff09\u3002","title":"7 \u79cd\u961f\u5217"},{"location":"ops-redis/","text":"docker deploy","title":"Ops redis"},{"location":"ops-zk/","text":"ZooKeeper \u5e38\u7528\u547d\u4ee4 \u00b6 \u7528\u9014 \u547d\u4ee4 \u5907\u6ce8 \u542f\u52a8ZK\u670d\u52a1 sh bin/zkServer.sh start \u67e5\u770bZK\u670d\u52a1\u72b6\u6001 sh bin/zkServer.sh status \u505c\u6b62ZK\u670d\u52a1 sh bin/zkServer.sh stop \u91cd\u542fZK\u670d\u52a1 sh bin/zkServer.sh restart \u8fde\u63a5\u670d\u52a1\u5668 sh bin/zkCli.sh -server 127.0.0.1:2181 \u67e5\u770b\u54ea\u4e2a\u8282\u70b9\u88ab\u9009\u62e9\u4f5c\u4e3afollower\u6216\u8005leader echo stat | nc 127.0.0.1 2181 \u6d4b\u8bd5\u662f\u5426\u542f\u52a8\u4e86\u8be5Server echo ruok | nc 127.0.0.1 2181 \u82e5\u56de\u590dimok\u8868\u793a\u5df2\u7ecf\u542f\u52a8 \u5217\u51fa\u672a\u7ecf\u5904\u7406\u7684\u4f1a\u8bdd\u548c\u4e34\u65f6\u8282\u70b9 echo dump | nc 127.0.0.1 2181 \u5173\u6389server echo kill | nc 127.0.0.1 2181 \u8f93\u51fa\u76f8\u5173\u670d\u52a1\u914d\u7f6e\u7684\u8be6\u7ec6\u4fe1\u606f echo conf | nc 127.0.0.1 2181 \u5217\u51fa\u6240\u6709\u8fde\u63a5\u5230\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u7684\u5b8c\u5168\u7684\u8fde\u63a5 / \u4f1a\u8bdd\u7684\u8be6\u7ec6\u4fe1\u606f echo cons | nc 127.0.0.1 2181 \u8f93\u51fa\u5173\u4e8e\u670d\u52a1\u73af\u5883\u7684\u8be6\u7ec6\u4fe1\u606f echo envi |nc 127.0.0.1 2181 \u533a\u522b\u4e8e conf \u547d\u4ee4 \u5217\u51fa\u672a\u7ecf\u5904\u7406\u7684\u8bf7\u6c42 echo reqs | nc 127.0.0.1 2181 \u5217\u51fa\u670d\u52a1\u5668 watch \u7684\u8be6\u7ec6\u4fe1\u606f echo wchs | nc 127.0.0.1 2181 \u901a\u8fc7 session \u5217\u51fa\u670d\u52a1\u5668 watch \u7684\u8be6\u7ec6\u4fe1\u606f echo wchc | nc 127.0.0.1 2181 \u8f93\u51fa\u662f\u4e00\u4e2a\u4e0e watch \u76f8\u5173\u7684\u4f1a\u8bdd\u7684\u5217\u8868 \u901a\u8fc7\u8def\u5f84\u5217\u51fa\u670d\u52a1\u5668 watch \u7684\u8be6\u7ec6\u4fe1\u606f echo wchp | nc 127.0.0.1 2181 \u8f93\u51fa\u4e00\u4e2a\u4e0e session \u76f8\u5173\u7684\u8def\u5f84\u3002","title":"\u8fd0\u7ef4 - zookeeper"},{"location":"ops-zk/#zookeeper","text":"\u7528\u9014 \u547d\u4ee4 \u5907\u6ce8 \u542f\u52a8ZK\u670d\u52a1 sh bin/zkServer.sh start \u67e5\u770bZK\u670d\u52a1\u72b6\u6001 sh bin/zkServer.sh status \u505c\u6b62ZK\u670d\u52a1 sh bin/zkServer.sh stop \u91cd\u542fZK\u670d\u52a1 sh bin/zkServer.sh restart \u8fde\u63a5\u670d\u52a1\u5668 sh bin/zkCli.sh -server 127.0.0.1:2181 \u67e5\u770b\u54ea\u4e2a\u8282\u70b9\u88ab\u9009\u62e9\u4f5c\u4e3afollower\u6216\u8005leader echo stat | nc 127.0.0.1 2181 \u6d4b\u8bd5\u662f\u5426\u542f\u52a8\u4e86\u8be5Server echo ruok | nc 127.0.0.1 2181 \u82e5\u56de\u590dimok\u8868\u793a\u5df2\u7ecf\u542f\u52a8 \u5217\u51fa\u672a\u7ecf\u5904\u7406\u7684\u4f1a\u8bdd\u548c\u4e34\u65f6\u8282\u70b9 echo dump | nc 127.0.0.1 2181 \u5173\u6389server echo kill | nc 127.0.0.1 2181 \u8f93\u51fa\u76f8\u5173\u670d\u52a1\u914d\u7f6e\u7684\u8be6\u7ec6\u4fe1\u606f echo conf | nc 127.0.0.1 2181 \u5217\u51fa\u6240\u6709\u8fde\u63a5\u5230\u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u7684\u5b8c\u5168\u7684\u8fde\u63a5 / \u4f1a\u8bdd\u7684\u8be6\u7ec6\u4fe1\u606f echo cons | nc 127.0.0.1 2181 \u8f93\u51fa\u5173\u4e8e\u670d\u52a1\u73af\u5883\u7684\u8be6\u7ec6\u4fe1\u606f echo envi |nc 127.0.0.1 2181 \u533a\u522b\u4e8e conf \u547d\u4ee4 \u5217\u51fa\u672a\u7ecf\u5904\u7406\u7684\u8bf7\u6c42 echo reqs | nc 127.0.0.1 2181 \u5217\u51fa\u670d\u52a1\u5668 watch \u7684\u8be6\u7ec6\u4fe1\u606f echo wchs | nc 127.0.0.1 2181 \u901a\u8fc7 session \u5217\u51fa\u670d\u52a1\u5668 watch \u7684\u8be6\u7ec6\u4fe1\u606f echo wchc | nc 127.0.0.1 2181 \u8f93\u51fa\u662f\u4e00\u4e2a\u4e0e watch \u76f8\u5173\u7684\u4f1a\u8bdd\u7684\u5217\u8868 \u901a\u8fc7\u8def\u5f84\u5217\u51fa\u670d\u52a1\u5668 watch \u7684\u8be6\u7ec6\u4fe1\u606f echo wchp | nc 127.0.0.1 2181 \u8f93\u51fa\u4e00\u4e2a\u4e0e session \u76f8\u5173\u7684\u8def\u5f84\u3002","title":"ZooKeeper \u5e38\u7528\u547d\u4ee4"},{"location":"ppt-agile-and-scrum/","text":"","title":"Ppt agile and scrum"},{"location":"ppt-git-tutorial/","text":"Git Tutorial \u00b6 Why Git \u00b6 Git tracks content rather than files Branches are lightweight and merging is easy , and I mean really easy . distributed It doesn\u2019t impose any workflow Git repositories are much smaller in file size than Subversion repositories. The staging area is awesome, it allows you to see the changes you will commit, commit partial changes and do various other stuff. You can rewrite history , which is great for preparing patch sets and fixing your mistakes ( before you publish the commits) Git vs SVN etc. \u00b6 Git is not better than Subversion. But is also not worse. It\u2019s different. SVN has the advantage that it\u2019s MUCH simpler to learn: There is your repository, all changes to towards it, if you know how to create, commit and checkout and you\u2019re ready to go and can pickup stuff like branching, update etc. later on. Git has the advantage that it\u2019s MUCH better suited if some developers are not always connected to the master repository. What are the differences between Subversion and Git? Git Basic \u00b6 GitFlow \u00b6 A successful Git branching model https://nvie.com/posts/a-successful-git-branching-model Introducing GitFlow https://datasift.github.io/gitflow/IntroducingGitFlow.html gitignore \u00b6 https://github.com/github/gitignore Generating a new SSH key and adding it to the ssh-agent \u00b6 https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent Commit Message \u00b6 Closing issues using keywords https://help.github.com/en/github/managing-your-work-on-github/closing-issues-using-keywords angular contributing commit message guidelines https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-commit-message-guidelines Code Style \u00b6 Google Java Style Guide https://google.github.io/styleguide/javaguide.html google/styleguide https://github.com/google/styleguide styleguide/intellij-java-google-style.xml https://github.com/google/styleguide/blob/gh-pages/intellij-java-google-style.xml styleguide/eclipse-java-google-style.xml https://google.github.io/styleguide/javaguide.html Reformat and rearrange code https://www.jetbrains.com/help/idea/reformat-and-rearrange-code.html About pull request merges \u00b6 https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges # 1. To rebase and squash based on the remote branch git rebase -i /master # merge commits via `fixup`, etc # 2. Create a new branch and merge these commits into one git checkout -b /master git merge --squash","title":"Git \u5165\u95e8\u624b\u518c"},{"location":"ppt-git-tutorial/#git-tutorial","text":"","title":"Git Tutorial"},{"location":"ppt-git-tutorial/#why-git","text":"Git tracks content rather than files Branches are lightweight and merging is easy , and I mean really easy . distributed It doesn\u2019t impose any workflow Git repositories are much smaller in file size than Subversion repositories. The staging area is awesome, it allows you to see the changes you will commit, commit partial changes and do various other stuff. You can rewrite history , which is great for preparing patch sets and fixing your mistakes ( before you publish the commits)","title":"Why Git"},{"location":"ppt-git-tutorial/#git-vs-svn-etc","text":"Git is not better than Subversion. But is also not worse. It\u2019s different. SVN has the advantage that it\u2019s MUCH simpler to learn: There is your repository, all changes to towards it, if you know how to create, commit and checkout and you\u2019re ready to go and can pickup stuff like branching, update etc. later on. Git has the advantage that it\u2019s MUCH better suited if some developers are not always connected to the master repository. What are the differences between Subversion and Git?","title":"Git vs SVN etc."},{"location":"ppt-git-tutorial/#git-basic","text":"","title":"Git Basic"},{"location":"ppt-git-tutorial/#gitflow","text":"A successful Git branching model https://nvie.com/posts/a-successful-git-branching-model Introducing GitFlow https://datasift.github.io/gitflow/IntroducingGitFlow.html","title":"GitFlow"},{"location":"ppt-git-tutorial/#gitignore","text":"https://github.com/github/gitignore","title":"gitignore"},{"location":"ppt-git-tutorial/#generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent","text":"https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent","title":"Generating a new SSH key and adding it to the ssh-agent"},{"location":"ppt-git-tutorial/#commit-message","text":"Closing issues using keywords https://help.github.com/en/github/managing-your-work-on-github/closing-issues-using-keywords angular contributing commit message guidelines https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-commit-message-guidelines","title":"Commit Message"},{"location":"ppt-git-tutorial/#code-style","text":"Google Java Style Guide https://google.github.io/styleguide/javaguide.html google/styleguide https://github.com/google/styleguide styleguide/intellij-java-google-style.xml https://github.com/google/styleguide/blob/gh-pages/intellij-java-google-style.xml styleguide/eclipse-java-google-style.xml https://google.github.io/styleguide/javaguide.html Reformat and rearrange code https://www.jetbrains.com/help/idea/reformat-and-rearrange-code.html","title":"Code Style"},{"location":"ppt-git-tutorial/#about-pull-request-merges","text":"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges # 1. To rebase and squash based on the remote branch git rebase -i /master # merge commits via `fixup`, etc # 2. Create a new branch and merge these commits into one git checkout -b /master git merge --squash","title":"About pull request merges"},{"location":"ppt-kpi-management/","text":"","title":"Ppt kpi management"},{"location":"ppt-metrics-driven-development/","text":"MDD \u00b6 \u6765\u6e90 \u00b6 Mantas Klasavi\u010dius , NOV 30, 2012, https://www.infoq.com/articles/metrics-driven-development/ \u7406\u89e3 \u00b6 Kevin Sookocheff, August 9, 2016, Metrics-Driven Development https://sookocheff.com/post/mdd/mdd/ \u7406\u89e3 DevOps \u00b6 https://itrevolution.com/the-three-ways-principles-underpinning-devops/","title":"MDD"},{"location":"ppt-metrics-driven-development/#mdd","text":"","title":"MDD"},{"location":"ppt-metrics-driven-development/#_1","text":"Mantas Klasavi\u010dius , NOV 30, 2012, https://www.infoq.com/articles/metrics-driven-development/","title":"\u6765\u6e90"},{"location":"ppt-metrics-driven-development/#_2","text":"Kevin Sookocheff, August 9, 2016, Metrics-Driven Development https://sookocheff.com/post/mdd/mdd/","title":"\u7406\u89e3"},{"location":"ppt-metrics-driven-development/#devops","text":"https://itrevolution.com/the-three-ways-principles-underpinning-devops/","title":"\u7406\u89e3 DevOps"},{"location":"ppt-okr-management/","text":"","title":"Ppt okr management"}]}